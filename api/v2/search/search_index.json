{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Index API Endpoints - Description Recomputations Requests Results Status results Metric Profiles Aggregation Profiles Operations Profiles Reports Tenants","title":"Home"},{"location":"#index","text":"","title":"Index"},{"location":"#api-endpoints-description","text":"Recomputations Requests Results Status results Metric Profiles Aggregation Profiles Operations Profiles Reports Tenants","title":"API Endpoints - Description"},{"location":"aggregation_profiles/","text":"API Calls Name Description Shortcut GET: List Aggregation Profile Requests This method can be used to retrieve a list of current aggregation profiles. Description GET: List a specific aggregation profile This method can be used to retrieve a specific aggregation profile based on its id. Description POST: Create a new aggregation profile This method can be used to create a new aggregation profile Description PUT: Update an aggregation profile This method can be used to update information on an existing aggregation profile Description DELETE: Delete an aggregation profile This method can be used to delete an existing aggregation profile Description [GET]: List Aggregation Profiles This method can be used to retrieve a list of current aggregation profiles Input GET /aggregation_profiles Optional Query Parameters Type Description Required name aggregation profile name to be used as query NO date Date to retrieve a historic version of the aggregations profiles. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : cloud , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-11 , name : critical , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : CREAM-CE , operation : AND }, { name : ARC-CE , operation : AND } ] }, { name : storage , operation : OR , services : [ { name : SRMv2 , operation : AND }, { name : SRM , operation : AND } ] } ] } ] } [GET]: List A Specific Aggregation profile This method can be used to retrieve specific aggregation profile based on its id Input GET /aggregation_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to list a historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : cloud , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] } ] } [POST]: Create a new Aggregation Profile This method can be used to insert a new aggregation profile Input POST /aggregation_profiles Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to create a new historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO POST BODY { name : new_aggregation_profile , date : 2019-12-12 , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : test.metric.profile , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Aggregation Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/aggregation_profiles/{{ID}} } } } [PUT]: Update information on an existing aggregation profile This method can be used to update information on an existing aggregation profile Input PUT /aggregation_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to update a new historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO PUT BODY { name : updated_profile , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : test.metric.profile , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Aggregation Profile successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/aggregation_profiles/{{ID}} } } } [DELETE]: Delete an existing aggregation profile This method can be used to delete an existing aggregation profile Input DELETE /aggregation_profiles/{ID} Request headers x-api-key: shared_key_value Content-Type: application/json Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Aggregation Profile Successfully Deleted , code : 200 } }","title":"Aggregation Profiles"},{"location":"aggregation_profiles/#api-calls","text":"Name Description Shortcut GET: List Aggregation Profile Requests This method can be used to retrieve a list of current aggregation profiles. Description GET: List a specific aggregation profile This method can be used to retrieve a specific aggregation profile based on its id. Description POST: Create a new aggregation profile This method can be used to create a new aggregation profile Description PUT: Update an aggregation profile This method can be used to update information on an existing aggregation profile Description DELETE: Delete an aggregation profile This method can be used to delete an existing aggregation profile Description","title":"API Calls"},{"location":"aggregation_profiles/#get-list-aggregation-profiles","text":"This method can be used to retrieve a list of current aggregation profiles","title":"[GET]: List Aggregation Profiles"},{"location":"aggregation_profiles/#input","text":"GET /aggregation_profiles","title":"Input"},{"location":"aggregation_profiles/#optional-query-parameters","text":"Type Description Required name aggregation profile name to be used as query NO date Date to retrieve a historic version of the aggregations profiles. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"aggregation_profiles/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"aggregation_profiles/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"aggregation_profiles/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : cloud , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-11 , name : critical , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : CREAM-CE , operation : AND }, { name : ARC-CE , operation : AND } ] }, { name : storage , operation : OR , services : [ { name : SRMv2 , operation : AND }, { name : SRM , operation : AND } ] } ] } ] }","title":"Response body"},{"location":"aggregation_profiles/#get-list-a-specific-aggregation-profile","text":"This method can be used to retrieve specific aggregation profile based on its id","title":"[GET]: List A Specific Aggregation profile"},{"location":"aggregation_profiles/#input_1","text":"GET /aggregation_profiles/{ID}","title":"Input"},{"location":"aggregation_profiles/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"aggregation_profiles/#optional-query-parameters_1","text":"Type Description Required date Date to list a historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"aggregation_profiles/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"aggregation_profiles/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : cloud , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : roc.critical , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] } ] }","title":"Response body"},{"location":"aggregation_profiles/#post-create-a-new-aggregation-profile","text":"This method can be used to insert a new aggregation profile","title":"[POST]: Create a new Aggregation Profile"},{"location":"aggregation_profiles/#input_2","text":"POST /aggregation_profiles","title":"Input"},{"location":"aggregation_profiles/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"aggregation_profiles/#optional-query-parameters_2","text":"Type Description Required date Date to create a new historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"aggregation_profiles/#post-body","text":"{ name : new_aggregation_profile , date : 2019-12-12 , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : test.metric.profile , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] }","title":"POST BODY"},{"location":"aggregation_profiles/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"aggregation_profiles/#response-body_2","text":"Json Response { status : { message : Aggregation Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/aggregation_profiles/{{ID}} } } }","title":"Response body"},{"location":"aggregation_profiles/#put-update-information-on-an-existing-aggregation-profile","text":"This method can be used to update information on an existing aggregation profile","title":"[PUT]: Update information on an existing aggregation profile"},{"location":"aggregation_profiles/#input_3","text":"PUT /aggregation_profiles/{ID}","title":"Input"},{"location":"aggregation_profiles/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"aggregation_profiles/#optional-query-parameters_3","text":"Type Description Required date Date to update a new historic version of the aggregation profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"aggregation_profiles/#put-body","text":"{ name : updated_profile , namespace : test , endpoint_group : sites , metric_operation : AND , profile_operation : AND , metric_profile : { name : test.metric.profile , id : 5637d684-1f8e-4a02-a502-720e8f11e432 }, groups : [ { name : compute , operation : OR , services : [ { name : SERVICEA , operation : AND }, { name : SERVICEB , operation : AND } ] }, { name : images , operation : OR , services : [ { name : SERVICEC , operation : AND }, { name : SERVICED , operation : AND } ] } ] }","title":"PUT BODY"},{"location":"aggregation_profiles/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"aggregation_profiles/#response-body_3","text":"Json Response { status : { message : Aggregation Profile successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/aggregation_profiles/{{ID}} } } }","title":"Response body"},{"location":"aggregation_profiles/#delete-delete-an-existing-aggregation-profile","text":"This method can be used to delete an existing aggregation profile","title":"[DELETE]: Delete an existing aggregation profile"},{"location":"aggregation_profiles/#input_4","text":"DELETE /aggregation_profiles/{ID}","title":"Input"},{"location":"aggregation_profiles/#request-headers_4","text":"x-api-key: shared_key_value Content-Type: application/json Accept: application/json","title":"Request headers"},{"location":"aggregation_profiles/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"aggregation_profiles/#response-body_4","text":"Json Response { status : { message : Aggregation Profile Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"downtimes/","text":"API Calls Name Description Shortcut GET: List Downtimes resources Request This method can be used to retrieve a list of current downtime resources. Description GET: List a specific Downtimes resource This method can be used to retrieve a specific downtime resource based on its id. Description POST: Create a new downtime resource This method can be used to create a new downtime resource Description PUT: Update a downtime resource This method can be used to update information on an existing downtime resource Description DELETE: Delete a downtime resource This method can be used to delete an existing downtime resource Description [GET]: List downtime resources This method can be used to retrieve a list of current downtime resources Input GET /downtimes Optional Query Parameters Type Description Required name downtime resource name to be used as query NO date Date to retrieve a historic version of the downtime resource. If no date parameter is provided the most current resource will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , endpoints : [ { hostname : host-A , service : service-A , start_time : 2019-10-11T04:00:33Z , end_time : 2019-10-11T15:33:00Z }, { hostname : host-B , service : service-B , start_time : 2019-10-11T12:00:33Z , end_time : 2019-10-11T12:33:00Z }, { hostname : host-C , service : service-C , start_time : 2019-10-11T20:00:33Z , end_time : 2019-10-11T22:15:00Z } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , endpoints : [ { hostname : host-01 , service : service-01 , start_time : 2019-10-11T02:00:33Z , end_time : 2019-10-11T23:33:00Z }, { hostname : host-02 , service : service-02 , start_time : 2019-10-11T16:00:33Z , end_time : 2019-10-11T16:45:00Z } ] } ] } [GET]: List A Specific downtime resource This method can be used to retrieve specific downtime resource based on its id Input GET /downtimes/{ID} Optional Query Parameters Type Description Required date Date to retrieve a historic version of the downtime resource. If no date parameter is provided the most current downtime resource will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , endpoints : [ { hostname : host-A , service : service-A , start_time : 2019-10-11T04:00:33Z , end_time : 2019-10-11T15:33:00Z }, { hostname : host-B , service : service-B , start_time : 2019-10-11T12:00:33Z , end_time : 2019-10-11T12:33:00Z }, { hostname : host-C , service : service-C , start_time : 2019-10-11T20:00:33Z , end_time : 2019-10-11T22:15:00Z } ] } ] } [POST]: Create a new downtime resource This method can be used to insert a new downtime resource Input POST /downtimes Optional Query Parameters Type Description Required date Date to create a new historic version of the downtime resource. If no date parameter is provided current date will be supplied automatically NO Request headers x-api-key: shared_key_value Accept: application/json POST BODY { name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 336 }, { name : site-b , value : 343 }, { name : site-c , value : 553 }, { name : site-d , value : 435 }, { name : site-e , value : 3.33 }, { name : site-f , value : 323.3 } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Downtimes resource succesfully created , code : 201 }, data : { id : {{id}} , links : { self : https:///api/v2/downtimes/{{id}} } } } [PUT]: Update information on an existing downtime resource This method can be used to update information on an existing downtime resource Input PUT /downtimes/{ID} Optional Query Parameters Type Description Required date Date to update a historic version of the downtime resource. If no date parameter is provided the current date will be supplied automatically NO Request headers x-api-key: shared_key_value Accept: application/json PUT BODY { name : downtimes_set , endpoints : [ { hostname : updated-host-foo , service : service-new-foo , start_time : 2019-10-11T23:10:00Z , end_time : 2019-10-11T23:25:00Z }, { hostname : updated-host-bar , service : service-new-bar , start_time : 2019-10-11T23:40:00Z , end_time : 2019-10-11T23:55:00Z } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Downtimes resource successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/downtimes/{{ID}} } } } [DELETE]: Delete an existing downtime resource This method can be used to delete an existing downtime resource Input DELETE /downtimes/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Downtimes resource Successfully Deleted , code : 200 } }","title":"API documentation | ARGO"},{"location":"downtimes/#api-calls","text":"Name Description Shortcut GET: List Downtimes resources Request This method can be used to retrieve a list of current downtime resources. Description GET: List a specific Downtimes resource This method can be used to retrieve a specific downtime resource based on its id. Description POST: Create a new downtime resource This method can be used to create a new downtime resource Description PUT: Update a downtime resource This method can be used to update information on an existing downtime resource Description DELETE: Delete a downtime resource This method can be used to delete an existing downtime resource Description","title":"API Calls"},{"location":"downtimes/#get-list-downtime-resources","text":"This method can be used to retrieve a list of current downtime resources","title":"[GET]: List downtime resources"},{"location":"downtimes/#input","text":"GET /downtimes","title":"Input"},{"location":"downtimes/#optional-query-parameters","text":"Type Description Required name downtime resource name to be used as query NO date Date to retrieve a historic version of the downtime resource. If no date parameter is provided the most current resource will be returned NO","title":"Optional Query Parameters"},{"location":"downtimes/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"downtimes/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"downtimes/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , endpoints : [ { hostname : host-A , service : service-A , start_time : 2019-10-11T04:00:33Z , end_time : 2019-10-11T15:33:00Z }, { hostname : host-B , service : service-B , start_time : 2019-10-11T12:00:33Z , end_time : 2019-10-11T12:33:00Z }, { hostname : host-C , service : service-C , start_time : 2019-10-11T20:00:33Z , end_time : 2019-10-11T22:15:00Z } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , endpoints : [ { hostname : host-01 , service : service-01 , start_time : 2019-10-11T02:00:33Z , end_time : 2019-10-11T23:33:00Z }, { hostname : host-02 , service : service-02 , start_time : 2019-10-11T16:00:33Z , end_time : 2019-10-11T16:45:00Z } ] } ] }","title":"Response body"},{"location":"downtimes/#get-list-a-specific-downtime-resource","text":"This method can be used to retrieve specific downtime resource based on its id","title":"[GET]: List A Specific downtime resource"},{"location":"downtimes/#input_1","text":"GET /downtimes/{ID}","title":"Input"},{"location":"downtimes/#optional-query-parameters_1","text":"Type Description Required date Date to retrieve a historic version of the downtime resource. If no date parameter is provided the most current downtime resource will be returned NO","title":"Optional Query Parameters"},{"location":"downtimes/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"downtimes/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"downtimes/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , endpoints : [ { hostname : host-A , service : service-A , start_time : 2019-10-11T04:00:33Z , end_time : 2019-10-11T15:33:00Z }, { hostname : host-B , service : service-B , start_time : 2019-10-11T12:00:33Z , end_time : 2019-10-11T12:33:00Z }, { hostname : host-C , service : service-C , start_time : 2019-10-11T20:00:33Z , end_time : 2019-10-11T22:15:00Z } ] } ] }","title":"Response body"},{"location":"downtimes/#post-create-a-new-downtime-resource","text":"This method can be used to insert a new downtime resource","title":"[POST]: Create a new downtime resource"},{"location":"downtimes/#input_2","text":"POST /downtimes","title":"Input"},{"location":"downtimes/#optional-query-parameters_2","text":"Type Description Required date Date to create a new historic version of the downtime resource. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"downtimes/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"downtimes/#post-body","text":"{ name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 336 }, { name : site-b , value : 343 }, { name : site-c , value : 553 }, { name : site-d , value : 435 }, { name : site-e , value : 3.33 }, { name : site-f , value : 323.3 } ] }","title":"POST BODY"},{"location":"downtimes/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"downtimes/#response-body_2","text":"Json Response { status : { message : Downtimes resource succesfully created , code : 201 }, data : { id : {{id}} , links : { self : https:///api/v2/downtimes/{{id}} } } }","title":"Response body"},{"location":"downtimes/#put-update-information-on-an-existing-downtime-resource","text":"This method can be used to update information on an existing downtime resource","title":"[PUT]: Update information on an existing downtime resource"},{"location":"downtimes/#input_3","text":"PUT /downtimes/{ID}","title":"Input"},{"location":"downtimes/#optional-query-parameters_3","text":"Type Description Required date Date to update a historic version of the downtime resource. If no date parameter is provided the current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"downtimes/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"downtimes/#put-body","text":"{ name : downtimes_set , endpoints : [ { hostname : updated-host-foo , service : service-new-foo , start_time : 2019-10-11T23:10:00Z , end_time : 2019-10-11T23:25:00Z }, { hostname : updated-host-bar , service : service-new-bar , start_time : 2019-10-11T23:40:00Z , end_time : 2019-10-11T23:55:00Z } ] }","title":"PUT BODY"},{"location":"downtimes/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"downtimes/#response-body_3","text":"Json Response { status : { message : Downtimes resource successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/downtimes/{{ID}} } } }","title":"Response body"},{"location":"downtimes/#delete-delete-an-existing-downtime-resource","text":"This method can be used to delete an existing downtime resource","title":"[DELETE]: Delete an existing downtime resource"},{"location":"downtimes/#input_4","text":"DELETE /downtimes/{ID}","title":"Input"},{"location":"downtimes/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"downtimes/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"downtimes/#response-body_4","text":"Json Response { status : { message : Downtimes resource Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"errors/","text":"The following error codes exist among the methods of the ARGO Web API: Error HTTP Code Description Bad request 400 One or more checks may have failed. More details on the carried out checks can be found here Wrong start_time 400 Use start_time url parameter in zulu format (like 2006-01-02T15:04:05Z ) to indicate the query start time Wrong end_time 400 Use end_time url parameter in zulu format (like 2006-01-02T15:04:05Z ) to indicate the query end time Wrong exec_time 400 Use exec_time url parameter in zulu format (like 2006-01-02T15:04:05Z ) to indicate the exact probe execution time Wrong granularity 400 The parameter value can be either daily or monthly Unauthorized 401 The client needs to provide a correct authentication token using the header x-api-key Forbidden 403 Access to the resource is forbidden due to authorization policy enforced Item not found 404 Either the path is not found or no results are available for the given query Content not acceptable 406 The Accept header either was not provided or was provided but did not contain any valid content types. Acceptable content types are application/xml or application/json","title":"Error Codes"},{"location":"factors/","text":"API Calls Name Description Shortcut GET: List Factors Requests This method can be used to retrieve a list of factors. Description GET: List Factors This method can be used to retrieve a list of current Factors Input GET /factors Request headers x-api-key: shared_key_value Accept: application/json or application/xml Response Headers: Status: 200 OK Response body Json Response { factors : [ { site : CETA-GRID , weight : 5406 }, { site : CFP-IST , weight : 1019 }, { site : CIEMAT-LCG2 , weight : 14595 } ] } XML Response root Factor site= CETA-GRID weight= 5406 /Factor Factor site= CFP-IST weight= 1019 /Factor Factor site= CIEMAT-LCG2 weight= 14595 /Factor /root","title":"API documentation | ARGO"},{"location":"factors/#api-calls","text":"Name Description Shortcut GET: List Factors Requests This method can be used to retrieve a list of factors. Description","title":"API Calls"},{"location":"factors/#get-list-factors","text":"This method can be used to retrieve a list of current Factors","title":"GET: List Factors"},{"location":"factors/#input","text":"GET /factors","title":"Input"},{"location":"factors/#request-headers","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Request headers"},{"location":"factors/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"factors/#response-body","text":"Json Response { factors : [ { site : CETA-GRID , weight : 5406 }, { site : CFP-IST , weight : 1019 }, { site : CIEMAT-LCG2 , weight : 14595 } ] } XML Response root Factor site= CETA-GRID weight= 5406 /Factor Factor site= CFP-IST weight= 1019 /Factor Factor site= CIEMAT-LCG2 weight= 14595 /Factor /root","title":"Response body"},{"location":"latest/","text":"Latest metric results API calls for retrieving latest metric results Name Description Shortcut GET: List all latest metric data List latest metric data . Description GET: List latest metric data for Group List latest metric data for a specific endpoint group. Description [GET]: List all latest metric data This method may be used to retrieve latest metric data available in a report. User can filer the results by status and limit the amount of results returned Input List All latest metric data /latest/{report}/{group_type}?[date] [filter] [limit] [strict] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES Url Parameters Type Description Required Default value date target a specific data NO today's date filter filter by status values ( all , non-ok , ok , critical , warning , unknown , missing ) NO all limit limit number of results returned NO 500 strict strict mode on/off NO \"false\" Notes : group_type in the specific request refer always to endpoint groups (eg. SITES ). strict when strict mode is ON, the response will contain only the latest grouped by endpoint_group/host/service/metric. Headers x-api-key: secret_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body { status : { message : type of message received , code : return code }, data : { metric_data : [ { endpoint_group : name of endpoint group , service : name of service , endpoint : name of endpoint , metric : name of metric , timestamp : 2018-06-22T11:55:44Z , status : OK || WARNING || CRITICAL || MISSING || UNKNOWN , summary : summary of the metric message - generated by the monitoring engine (nagios) , message : body of nagios generated message } ] } } Example Request: URL: latest/Report_B/TENANT_SITES?date=2015-05-01T00:00:00Z filter=non-ok limit=10 Headers: x-api-key: secret_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Reponse body: { status : { message : application/json , code : 200 }, data : { metric_data : [ { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : WARNING , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-02-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : MISSING , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-03-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : CRITICAL , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T01:00:00Z , status : UNKNOWN , summary : someService status is CRITICAL , message : someService data upload test failed } ] } } [GET]: List All Metric Data for a specific endpoint group This method may be used to retrieve latest metric data available in a report for a specific endpoint group. User can filer the results by status and limit the amount of results returned Input /latest/{report}/{group_type}/{group_name}/?[date] [filter] [limit] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES Url Parameters Type Description Required Default value date target a specific data NO today's date filter filter by status values ( all , non-ok , ok , critical , warning , unknown , missing ) NO all limit limit number of results returned NO 500 strict strict mode on/off NO \"false\" Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). strict when strict mode is ON, the response will contain only the latest grouped by endpoint_group/host/service/metric. Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body { status : { message : type of message received , code : return code }, data : { metric_data : [ { endpoint_group : name of endpoint group , service : name of service , endpoint : name of endpoint , metric : name of metric , timestamp : 2018-06-22T11:55:44Z , status : OK || WARNING || CRITICAL || MISSING || UNKNOWN , summary : summary of the metric message - generated by the monitoring engine (nagios) , message : body of nagios generated message }, ] } } Example Request: URL: latest/Report_B/TENANT_SITES/EL-01-AUTH?date=2015-05-01T00:00:00Z filter=non-ok limit=10 Headers: x-api-key: secret_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Reponse body: { status : { message : application/json , code : 200 }, data : { metric_data : [ { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : WARNING , summary : someService status is warning , message : someService data upload test return value of warning }, { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T01:00:00Z , status : UNKNOWN , summary : someService status is CRITICAL , message : someService data upload test failed } ] } }","title":"Latest results"},{"location":"latest/#latest-metric-results","text":"API calls for retrieving latest metric results Name Description Shortcut GET: List all latest metric data List latest metric data . Description GET: List latest metric data for Group List latest metric data for a specific endpoint group. Description","title":"Latest metric results"},{"location":"latest/#get-list-all-latest-metric-data","text":"This method may be used to retrieve latest metric data available in a report. User can filer the results by status and limit the amount of results returned","title":"[GET]: List all latest metric data"},{"location":"latest/#input","text":"","title":"Input"},{"location":"latest/#list-all-latest-metric-data","text":"/latest/{report}/{group_type}?[date] [filter] [limit] [strict]","title":"List All latest metric data"},{"location":"latest/#path-parameters","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES","title":"Path Parameters"},{"location":"latest/#url-parameters","text":"Type Description Required Default value date target a specific data NO today's date filter filter by status values ( all , non-ok , ok , critical , warning , unknown , missing ) NO all limit limit number of results returned NO 500 strict strict mode on/off NO \"false\" Notes : group_type in the specific request refer always to endpoint groups (eg. SITES ). strict when strict mode is ON, the response will contain only the latest grouped by endpoint_group/host/service/metric.","title":"Url Parameters"},{"location":"latest/#headers","text":"x-api-key: secret_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"latest/#response-code","text":"Status: 200 OK","title":"Response Code"},{"location":"latest/#response-body","text":"{ status : { message : type of message received , code : return code }, data : { metric_data : [ { endpoint_group : name of endpoint group , service : name of service , endpoint : name of endpoint , metric : name of metric , timestamp : 2018-06-22T11:55:44Z , status : OK || WARNING || CRITICAL || MISSING || UNKNOWN , summary : summary of the metric message - generated by the monitoring engine (nagios) , message : body of nagios generated message } ] } }","title":"Response body"},{"location":"latest/#example-request","text":"URL: latest/Report_B/TENANT_SITES?date=2015-05-01T00:00:00Z filter=non-ok limit=10 Headers: x-api-key: secret_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"latest/#example-response","text":"Code: Status: 200 OK Reponse body: { status : { message : application/json , code : 200 }, data : { metric_data : [ { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : WARNING , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-02-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : MISSING , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-03-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : CRITICAL , summary : someService status is ok , message : someService data upload test return value of ok }, { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T01:00:00Z , status : UNKNOWN , summary : someService status is CRITICAL , message : someService data upload test failed } ] } }","title":"Example Response:"},{"location":"latest/#get-list-all-metric-data-for-a-specific-endpoint-group","text":"This method may be used to retrieve latest metric data available in a report for a specific endpoint group. User can filer the results by status and limit the amount of results returned","title":"[GET]: List All Metric Data for a specific endpoint group"},{"location":"latest/#input_1","text":"/latest/{report}/{group_type}/{group_name}/?[date] [filter] [limit]","title":"Input"},{"location":"latest/#path-parameters_1","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES","title":"Path Parameters"},{"location":"latest/#url-parameters_1","text":"Type Description Required Default value date target a specific data NO today's date filter filter by status values ( all , non-ok , ok , critical , warning , unknown , missing ) NO all limit limit number of results returned NO 500 strict strict mode on/off NO \"false\" Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). strict when strict mode is ON, the response will contain only the latest grouped by endpoint_group/host/service/metric.","title":"Url Parameters"},{"location":"latest/#headers_1","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"latest/#response-code_1","text":"Status: 200 OK","title":"Response Code"},{"location":"latest/#response-body_1","text":"{ status : { message : type of message received , code : return code }, data : { metric_data : [ { endpoint_group : name of endpoint group , service : name of service , endpoint : name of endpoint , metric : name of metric , timestamp : 2018-06-22T11:55:44Z , status : OK || WARNING || CRITICAL || MISSING || UNKNOWN , summary : summary of the metric message - generated by the monitoring engine (nagios) , message : body of nagios generated message }, ] } }","title":"Response body"},{"location":"latest/#example-request_1","text":"URL: latest/Report_B/TENANT_SITES/EL-01-AUTH?date=2015-05-01T00:00:00Z filter=non-ok limit=10 Headers: x-api-key: secret_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"latest/#example-response_1","text":"Code: Status: 200 OK Reponse body: { status : { message : application/json , code : 200 }, data : { metric_data : [ { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T05:00:00Z , status : WARNING , summary : someService status is warning , message : someService data upload test return value of warning }, { endpoint_group : EL-01-AUTH , service : someService , endpoint : someservice.example.gr , metric : someService-FileTransfer , timestamp : 2015-05-01T01:00:00Z , status : UNKNOWN , summary : someService status is CRITICAL , message : someService data upload test failed } ] } }","title":"Example Response:"},{"location":"metric_profiles/","text":"API Calls Name Description Shortcut GET: List Metric Profile Requests This method can be used to retrieve a list of current metric profiles. Description GET: List a specific Metric profile This method can be used to retrieve a specific metric profile based on its id. Description POST: Create a new metric profile This method can be used to create a new metric profile Description PUT: Update a metric profile This method can be used to update information on an existing metric profile Description DELETE: Delete a metric profile This method can be used to delete an existing metric profile Description [GET]: List Metric Profiles This method can be used to retrieve a list of current Metric profiles Input GET /metric_profiles Optional Query Parameters Type Description Required name metric profile name to be used as query NO date Date to retrieve a historic version of the metric profile. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : ch.cern.SAM.ROC , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , hr.srce.CADist-Check , hr.srce.CREAMCE-CertLifetime , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-01 , name : ch.cern.SAM.ROC_CRITICAL , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] } ] } [GET]: List A Specific Metric profile This method can be used to retrieve specific metric profile based on its id Input GET /metric_profiles/{ID} Optional Query Parameters Type Description Required date Date to retrieve a historic version of the metric profile. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-01 , name : ch.cern.SAM.ROC_CRITICAL , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] } ] } [POST]: Create a new Metric Profile This method can be used to insert a new metric profile Input POST /metric_profiles Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to create a new historic version of the metric profile. If no date parameter is provided current date will be supplied automatically NO POST BODY { name : test_profile , services : [ { service : Service-A , metrics : [ metric.A.1 , metric.A.2 , metric.A.3 , metric.A.4 ] }, { service : Service-B , metrics : [ metric.B.1 , metric.B.2 ] } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Metric Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/metric_profiles/{{ID}} } } } [PUT]: Update information on an existing metric profile This method can be used to update information on an existing metric profile Input PUT /metric_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to update a new historic version of the operation profile. If no date parameter is provided current date will be supplied automatically NO PUT BODY { name : test_profile , services : [ { service : Service-A , metrics : [ metric.A.1 , metric.A.2 , metric.A.3 , metric.A.4 ] }, { service : Service-B , metrics : [ metric.B.1 , metric.B.2 ] } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Metric Profile successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/metric_profiles/{{ID}} } } } [DELETE]: Delete an existing metric profile This method can be used to delete an existing metric profile Input DELETE /metric_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Metric Profile Successfully Deleted , code : 200 } }","title":"Metric Profiles"},{"location":"metric_profiles/#api-calls","text":"Name Description Shortcut GET: List Metric Profile Requests This method can be used to retrieve a list of current metric profiles. Description GET: List a specific Metric profile This method can be used to retrieve a specific metric profile based on its id. Description POST: Create a new metric profile This method can be used to create a new metric profile Description PUT: Update a metric profile This method can be used to update information on an existing metric profile Description DELETE: Delete a metric profile This method can be used to delete an existing metric profile Description","title":"API Calls"},{"location":"metric_profiles/#get-list-metric-profiles","text":"This method can be used to retrieve a list of current Metric profiles","title":"[GET]: List Metric Profiles"},{"location":"metric_profiles/#input","text":"GET /metric_profiles","title":"Input"},{"location":"metric_profiles/#optional-query-parameters","text":"Type Description Required name metric profile name to be used as query NO date Date to retrieve a historic version of the metric profile. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"metric_profiles/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"metric_profiles/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"metric_profiles/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-10-10 , name : ch.cern.SAM.ROC , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , hr.srce.CADist-Check , hr.srce.CREAMCE-CertLifetime , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-01 , name : ch.cern.SAM.ROC_CRITICAL , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] } ] }","title":"Response body"},{"location":"metric_profiles/#get-list-a-specific-metric-profile","text":"This method can be used to retrieve specific metric profile based on its id","title":"[GET]: List A Specific Metric profile"},{"location":"metric_profiles/#input_1","text":"GET /metric_profiles/{ID}","title":"Input"},{"location":"metric_profiles/#optional-query-parameters_1","text":"Type Description Required date Date to retrieve a historic version of the metric profile. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"metric_profiles/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"metric_profiles/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"metric_profiles/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-01 , name : ch.cern.SAM.ROC_CRITICAL , services : [ { service : CREAM-CE , metrics : [ emi.cream.CREAMCE-JobSubmit , emi.wn.WN-Bi , emi.wn.WN-Csh , emi.wn.WN-SoftVer ] }, { service : SRMv2 , metrics : [ hr.srce.SRM2-CertLifetime , org.sam.SRM-Del , org.sam.SRM-Get , org.sam.SRM-GetSURLs , org.sam.SRM-GetTURLs , org.sam.SRM-Ls , org.sam.SRM-LsDir , org.sam.SRM-Put ] } ] } ] }","title":"Response body"},{"location":"metric_profiles/#post-create-a-new-metric-profile","text":"This method can be used to insert a new metric profile","title":"[POST]: Create a new Metric Profile"},{"location":"metric_profiles/#input_2","text":"POST /metric_profiles","title":"Input"},{"location":"metric_profiles/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"metric_profiles/#optional-query-parameters_2","text":"Type Description Required date Date to create a new historic version of the metric profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"metric_profiles/#post-body","text":"{ name : test_profile , services : [ { service : Service-A , metrics : [ metric.A.1 , metric.A.2 , metric.A.3 , metric.A.4 ] }, { service : Service-B , metrics : [ metric.B.1 , metric.B.2 ] } ] }","title":"POST BODY"},{"location":"metric_profiles/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"metric_profiles/#response-body_2","text":"Json Response { status : { message : Metric Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/metric_profiles/{{ID}} } } }","title":"Response body"},{"location":"metric_profiles/#put-update-information-on-an-existing-metric-profile","text":"This method can be used to update information on an existing metric profile","title":"[PUT]: Update information on an existing metric profile"},{"location":"metric_profiles/#input_3","text":"PUT /metric_profiles/{ID}","title":"Input"},{"location":"metric_profiles/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"metric_profiles/#optional-query-parameters_3","text":"Type Description Required date Date to update a new historic version of the operation profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"metric_profiles/#put-body","text":"{ name : test_profile , services : [ { service : Service-A , metrics : [ metric.A.1 , metric.A.2 , metric.A.3 , metric.A.4 ] }, { service : Service-B , metrics : [ metric.B.1 , metric.B.2 ] } ] }","title":"PUT BODY"},{"location":"metric_profiles/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"metric_profiles/#response-body_3","text":"Json Response { status : { message : Metric Profile successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/metric_profiles/{{ID}} } } }","title":"Response body"},{"location":"metric_profiles/#delete-delete-an-existing-metric-profile","text":"This method can be used to delete an existing metric profile","title":"[DELETE]: Delete an existing metric profile"},{"location":"metric_profiles/#input_4","text":"DELETE /metric_profiles/{ID}","title":"Input"},{"location":"metric_profiles/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"metric_profiles/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"metric_profiles/#response-body_4","text":"Json Response { status : { message : Metric Profile Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"metrics/","text":"Metric results API call for retrieving detailed metric result. [GET]: Metric Result This method may be used to retrieve a specific service metric result. Input /metric_result/{hostname}/{metric_name}?[exec_time] Path Parameters Type Description Required Default value hostname hostname of service endpoint YES metric_name name of the metric YES Url Parameters Type Description Required Default value exec_time The execution date of query in zulu format YES Notes : exec_time : The execution date of query in zulu format. In order to get the correct execution time get status results for all metrics (under a given endpoint, service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics List) Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body Example Request: URL: /api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] } ] } ] } [GET]: Multiple Metric Results for a specific host, on a specific day This method may be used to retrieve multiple service metric results for a specific host on a specific day Input /metric_result/{hostname}?[exec_time] Path Parameters Type Description Required Default value hostname hostname of service endpoint YES Url Parameters Type Description Required Default value exec_time The execution date of query in zulu format - timepart is irrelevant (can be 00:00:00Z) YES filter Filter metric results by statuses: non-ok, ok, critical, warning NO Notes : exec_time : The specific date of query in zulu format. The time part of the date is irrelevant because all metrics of that day are returned. ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics List) Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body Example Request: URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok }, { Timestamp : 2015-06-20T18:00:00Z , Value : CRITICAL , Summary : httpd is critical , Message : some checks failed }, { Timestamp : 2015-06-20T23:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] }, { Name : httpd_memory , Service : httpd , Details : [ { Timestamp : 2015-06-20T06:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T09:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T18:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, ] } ] } ] } Example Request with filter parameter set to non-ok : URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z filter=non-ok Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response using fitler parameter set to non-ok : Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T18:00:00Z , Value : CRITICAL , Summary : httpd is critical , Message : some checks failed } ] } ] } ] } Example Request with filter parameter set to ok : URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z filter=ok Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response using fitler parameter set to ok : Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok }, { Timestamp : 2015-06-20T23:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] }, { Name : httpd_memory , Service : httpd , Details : [ { Timestamp : 2015-06-20T06:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T09:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T18:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, ] } ] } ] }","title":"Metrics"},{"location":"metrics/#metric-results","text":"API call for retrieving detailed metric result.","title":"Metric results"},{"location":"metrics/#get-metric-result","text":"This method may be used to retrieve a specific service metric result.","title":"[GET]: Metric Result"},{"location":"metrics/#input","text":"/metric_result/{hostname}/{metric_name}?[exec_time]","title":"Input"},{"location":"metrics/#path-parameters","text":"Type Description Required Default value hostname hostname of service endpoint YES metric_name name of the metric YES","title":"Path Parameters"},{"location":"metrics/#url-parameters","text":"Type Description Required Default value exec_time The execution date of query in zulu format YES Notes : exec_time : The execution date of query in zulu format. In order to get the correct execution time get status results for all metrics (under a given endpoint, service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics List)","title":"Url Parameters"},{"location":"metrics/#headers","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"metrics/#response-code","text":"Status: 200 OK","title":"Response Code"},{"location":"metrics/#response-body","text":"","title":"Response body"},{"location":"metrics/#example-request","text":"URL: /api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"metrics/#example-response","text":"Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] } ] } ] }","title":"Example Response:"},{"location":"metrics/#get-multiple-metric-results-for-a-specific-host-on-a-specific-day","text":"This method may be used to retrieve multiple service metric results for a specific host on a specific day","title":"[GET]: Multiple Metric Results for a specific host, on a specific day"},{"location":"metrics/#input_1","text":"/metric_result/{hostname}?[exec_time]","title":"Input"},{"location":"metrics/#path-parameters_1","text":"Type Description Required Default value hostname hostname of service endpoint YES","title":"Path Parameters"},{"location":"metrics/#url-parameters_1","text":"Type Description Required Default value exec_time The execution date of query in zulu format - timepart is irrelevant (can be 00:00:00Z) YES filter Filter metric results by statuses: non-ok, ok, critical, warning NO Notes : exec_time : The specific date of query in zulu format. The time part of the date is irrelevant because all metrics of that day are returned. ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics List)","title":"Url Parameters"},{"location":"metrics/#headers_1","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"metrics/#response-code_1","text":"Status: 200 OK","title":"Response Code"},{"location":"metrics/#response-body_1","text":"","title":"Response body"},{"location":"metrics/#example-request_1","text":"URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"metrics/#example-response_1","text":"Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok }, { Timestamp : 2015-06-20T18:00:00Z , Value : CRITICAL , Summary : httpd is critical , Message : some checks failed }, { Timestamp : 2015-06-20T23:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] }, { Name : httpd_memory , Service : httpd , Details : [ { Timestamp : 2015-06-20T06:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T09:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T18:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, ] } ] } ] }","title":"Example Response:"},{"location":"metrics/#example-request-with-filter-parameter-set-to-non-ok","text":"URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z filter=non-ok Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request with filter parameter set to non-ok:"},{"location":"metrics/#example-response-using-fitler-parameter-set-to-non-ok","text":"Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T18:00:00Z , Value : CRITICAL , Summary : httpd is critical , Message : some checks failed } ] } ] } ] }","title":"Example Response using fitler parameter set to non-ok:"},{"location":"metrics/#example-request-with-filter-parameter-set-to-ok","text":"URL: /api/v2/metric_result/www.example.com?exec_time=2015-06-20T00:00:00Z filter=ok Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request with filter parameter set to ok:"},{"location":"metrics/#example-response-using-fitler-parameter-set-to-ok","text":"Code: Status: 200 OK Reponse body: { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Service : httpd , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok }, { Timestamp : 2015-06-20T23:00:00Z , Value : OK , Summary : httpd is ok , Message : all checks ok } ] }, { Name : httpd_memory , Service : httpd , Details : [ { Timestamp : 2015-06-20T06:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T09:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, { Timestamp : 2015-06-20T18:00:00Z , Value : OK , Summary : memcheck ok , Message : memory under 20% }, ] } ] } ] }","title":"Example Response using fitler parameter set to ok:"},{"location":"operations_profiles/","text":"API Calls Name Description Shortcut GET: List Operations Profile Requests This method can be used to retrieve a list of current Operations profiles. Description GET: List a specific Operations profile This method can be used to retrieve a specific Operations profile based on its id. Description POST: Create a new Operations profile This method can be used to create a new Operations profile Description PUT: Update an Operations profile This method can be used to update information on an existing Operations profile Description DELETE: Delete an Operations profile This method can be used to delete an existing Operations profile Description [GET]: List Operations Profiles This method can be used to retrieve a list of current Operations profiles. Input GET /operations_profiles Optional Query Parameters Type Description Required name Operations profile name to be used as query NO date Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : ops1 , available_states : [ A,B,C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : ops2 , available_states : [ X,Y,Z ], defaults : { down : Y , missing : X , unknown : Z }, operations : [ { name : AND , truth_table : [ { a : X , b : Y , x : Y }, { a : X , b : Z , x : Z }, { a : Y , b : Z , x : Z } ] }, { name : OR , truth_table : [ { a : X , b : Y , x : X }, { a : X , b : Z , x : X }, { a : Y , b : Z , x : Y } ] } ] } ] } [GET]: List A Specific Operations profile This method can be used to retrieve specific Operations profile based on its id Input GET /operations_profiles/{ID} Optional Query Parameters Type Description Required date Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : ops1 , available_states : [ A,B,C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] } ] } [POST]: Create a new Operations Profile This method can be used to insert a new operations profile Input POST /operations_profiles Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to create a new historic version of the operation profile. If no date parameter is provided current date will be supplied automatically NO POST BODY { name : tops1 , available_states : [ A , B , C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Operations Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/operations_profiles/{{ID}} } } } [PUT]: Update information on an existing operations profile This method can be used to update information on an existing operations profile Input PUT /operations_profiles/{ID} Optional Query Parameters Type Description Required date Date to update a historic version of the operation profile. If no date parameter is provided the current date will be supplied automatically NO Request headers x-api-key: shared_key_value Accept: application/json PUT BODY { name : tops1 , available_states : [ A , B , C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Operations Profile successfully updated (new snapshot created) , code : 200 } } [DELETE]: Delete an existing aggregation profile This method can be used to delete an existing aggregation profile Input DELETE /operations_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Operations Profile Successfully Deleted , code : 200 } } Validation Checks When submitting or updating a new operations profile, validation checks are performed on json POST/PUT body for the following cases: - Check if user has defined more than once a state name in available states list - Check if user has defined more than once an operation name in operations list - Check if user used an undefined state in operations - Check if truth table statements are adequate to handle all cases When an invalid operations profile is submitted the api responds with a validation error list: Example invalid profile json { \"name\": \"ops1\", \"available_states\": [ \"A\",\"B\",\"C\",\"C\" ], \"defaults\": { \"down\": \"B\", \"missing\": \"FOO\", \"unknown\": \"C\" }, \"operations\": [ { \"name\": \"AND\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"B\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"C\" }, { \"a\": \"B\", \"b\": \"BAR\", \"x\": \"C\" } ] }, { \"name\": \"OR\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"A\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"A\" }, { \"a\": \"B\", \"b\": \"CAR\", \"x\": \"B\" } ] }, { \"name\": \"OR\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"A\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"A\" }, { \"a\": \"B\", \"b\": \"C\", \"x\": \"B\" } ] } ] } The above profile definiton contains errors like: duplicate states, undefined states and unadequate statements in truth tables. Api response is the following: Response Headers: Status: 422 Unprocessable Entity Response body json { \"status\": { \"message\": \"Validation Error\", \"code\": \"422\" }, \"errors\": [ { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"State:C is duplicated\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Operation:OR is duplicated\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Default Missing State: FOO not in available States\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"In Operation: AND, statement member b: BAR contains undeclared state\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"In Operation: OR, statement member b: CAR contains undeclared state\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: OR\" } ] }","title":"Operations Profiles"},{"location":"operations_profiles/#api-calls","text":"Name Description Shortcut GET: List Operations Profile Requests This method can be used to retrieve a list of current Operations profiles. Description GET: List a specific Operations profile This method can be used to retrieve a specific Operations profile based on its id. Description POST: Create a new Operations profile This method can be used to create a new Operations profile Description PUT: Update an Operations profile This method can be used to update information on an existing Operations profile Description DELETE: Delete an Operations profile This method can be used to delete an existing Operations profile Description","title":"API Calls"},{"location":"operations_profiles/#get-list-operations-profiles","text":"This method can be used to retrieve a list of current Operations profiles.","title":"[GET]: List Operations Profiles"},{"location":"operations_profiles/#input","text":"GET /operations_profiles","title":"Input"},{"location":"operations_profiles/#optional-query-parameters","text":"Type Description Required name Operations profile name to be used as query NO date Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"operations_profiles/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"operations_profiles/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"operations_profiles/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : ops1 , available_states : [ A,B,C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : ops2 , available_states : [ X,Y,Z ], defaults : { down : Y , missing : X , unknown : Z }, operations : [ { name : AND , truth_table : [ { a : X , b : Y , x : Y }, { a : X , b : Z , x : Z }, { a : Y , b : Z , x : Z } ] }, { name : OR , truth_table : [ { a : X , b : Y , x : X }, { a : X , b : Z , x : X }, { a : Y , b : Z , x : Y } ] } ] } ] }","title":"Response body"},{"location":"operations_profiles/#get-list-a-specific-operations-profile","text":"This method can be used to retrieve specific Operations profile based on its id","title":"[GET]: List A Specific Operations profile"},{"location":"operations_profiles/#input_1","text":"GET /operations_profiles/{ID}","title":"Input"},{"location":"operations_profiles/#optional-query-parameters_1","text":"Type Description Required date Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"operations_profiles/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"operations_profiles/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"operations_profiles/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : ops1 , available_states : [ A,B,C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] } ] }","title":"Response body"},{"location":"operations_profiles/#post-create-a-new-operations-profile","text":"This method can be used to insert a new operations profile","title":"[POST]: Create a new Operations Profile"},{"location":"operations_profiles/#input_2","text":"POST /operations_profiles","title":"Input"},{"location":"operations_profiles/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"operations_profiles/#optional-query-parameters_2","text":"Type Description Required date Date to create a new historic version of the operation profile. If no date parameter is provided current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"operations_profiles/#post-body","text":"{ name : tops1 , available_states : [ A , B , C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] }","title":"POST BODY"},{"location":"operations_profiles/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"operations_profiles/#response-body_2","text":"Json Response { status : { message : Operations Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/operations_profiles/{{ID}} } } }","title":"Response body"},{"location":"operations_profiles/#put-update-information-on-an-existing-operations-profile","text":"This method can be used to update information on an existing operations profile","title":"[PUT]: Update information on an existing operations profile"},{"location":"operations_profiles/#input_3","text":"PUT /operations_profiles/{ID}","title":"Input"},{"location":"operations_profiles/#optional-query-parameters_3","text":"Type Description Required date Date to update a historic version of the operation profile. If no date parameter is provided the current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"operations_profiles/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"operations_profiles/#put-body","text":"{ name : tops1 , available_states : [ A , B , C ], defaults : { down : B , missing : A , unknown : C }, operations : [ { name : AND , truth_table : [ { a : A , b : B , x : B }, { a : A , b : C , x : C }, { a : B , b : C , x : C } ] }, { name : OR , truth_table : [ { a : A , b : B , x : A }, { a : A , b : C , x : A }, { a : B , b : C , x : B } ] } ] }","title":"PUT BODY"},{"location":"operations_profiles/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"operations_profiles/#response-body_3","text":"Json Response { status : { message : Operations Profile successfully updated (new snapshot created) , code : 200 } }","title":"Response body"},{"location":"operations_profiles/#delete-delete-an-existing-aggregation-profile","text":"This method can be used to delete an existing aggregation profile","title":"[DELETE]: Delete an existing aggregation profile"},{"location":"operations_profiles/#input_4","text":"DELETE /operations_profiles/{ID}","title":"Input"},{"location":"operations_profiles/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"operations_profiles/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"operations_profiles/#response-body_4","text":"Json Response { status : { message : Operations Profile Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"operations_profiles/#validation-checks","text":"When submitting or updating a new operations profile, validation checks are performed on json POST/PUT body for the following cases: - Check if user has defined more than once a state name in available states list - Check if user has defined more than once an operation name in operations list - Check if user used an undefined state in operations - Check if truth table statements are adequate to handle all cases When an invalid operations profile is submitted the api responds with a validation error list:","title":"Validation Checks"},{"location":"operations_profiles/#example-invalid-profile","text":"json { \"name\": \"ops1\", \"available_states\": [ \"A\",\"B\",\"C\",\"C\" ], \"defaults\": { \"down\": \"B\", \"missing\": \"FOO\", \"unknown\": \"C\" }, \"operations\": [ { \"name\": \"AND\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"B\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"C\" }, { \"a\": \"B\", \"b\": \"BAR\", \"x\": \"C\" } ] }, { \"name\": \"OR\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"A\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"A\" }, { \"a\": \"B\", \"b\": \"CAR\", \"x\": \"B\" } ] }, { \"name\": \"OR\", \"truth_table\": [ { \"a\": \"A\", \"b\": \"B\", \"x\": \"A\" }, { \"a\": \"A\", \"b\": \"C\", \"x\": \"A\" }, { \"a\": \"B\", \"b\": \"C\", \"x\": \"B\" } ] } ] } The above profile definiton contains errors like: duplicate states, undefined states and unadequate statements in truth tables. Api response is the following:","title":"Example invalid profile"},{"location":"operations_profiles/#response_5","text":"Headers: Status: 422 Unprocessable Entity","title":"Response"},{"location":"operations_profiles/#response-body_5","text":"json { \"status\": { \"message\": \"Validation Error\", \"code\": \"422\" }, \"errors\": [ { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"State:C is duplicated\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Operation:OR is duplicated\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Default Missing State: FOO not in available States\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"In Operation: AND, statement member b: BAR contains undeclared state\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"In Operation: OR, statement member b: CAR contains undeclared state\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: AND\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:A in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:B in operation: OR\" }, { \"message\": \"Validation Failed\", \"code\": \"422\", \"details\": \"Not enough mentions of state:C in operation: OR\" } ] }","title":"Response body"},{"location":"recomputations/","text":"Recomputations Requests API Calls for listing existing and creating new recomputation requests Name Description Shortcut GET: List Recomputation Requests This method can be used to retrieve a list of current Recomputation requests. Description POST: Create a new recomputation request This method can be used to insert a new recomputation request onto the Compute Engine. Description DELETE: Delete a specific recomputation This method can be used to delete a specific recomputation. Description POST: change status This method can be used to change status of a specific recomputation. Description DELETE: Reset status of recomputation This method can be used to reset status of a specific recomputation. Description [GET]: List Recomputation Requests This method can be used to retrieve a list of current Recomputation requests. Input GET /recomputations Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { root : [ { requester_name : Arya Stark , requester_email : astark@shadowguild.com , reason : power cuts , start_time : 2015-01-10T12:00:00Z , end_time : 2015-01-30T23:00:00Z , report : EGI_Critical , exclude : [ Gluster ], status : running , timestamp : 2015-02-01T14:58:40 , history : [ { status : pending , timestamp : 2015-02-01T14:58:40 }, { status : approved , timestamp : 2015-02-02T08:58:40 }, { status : running , timestamp : 2015-02-02T09:10:40 }, ] } ] } [POST]: Create a new recomputation request This method can be used to insert a new recomputation request onto the Compute Engine. Input POST /recomputations Request headers x-api-key: shared_key_value Accept: application/json Parameters Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES reason Explain the need for a recomputation YES requester_name The name of the person submitting the recomputation YES requester_email The email of the person submitting the recomputation YES report Report for which the recomputation is requested YES exclude Groups to be excluded from recomputation. If more than one group are to be excluded use the parameter as many times as needed within the same API call NO Response Headers: Status: 201 Created [DELETE]: Delete a specific recomputation DELETE /recomputations/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Status 200 OK [POST]: Change status of recomputation POST /recomputations/{ID}/status Request headers x-api-key: shared_key_value Accept: application/json POST body { status : approved } Eligible recomputation status values: pending approved rejected running done If recomputation status input not in eligible values the api will respond with status code 404 : conflict Response Status 200 OK Response body Json Response { status : { message : Recomputation status updated successfully to: approved , code : 200 } } [DELETE]: Reset status of a specific recomputation DELETE /recomputations/{ID}/status Request headers x-api-key: shared_key_value Accept: application/json Response Status 200 OK Response body Json Response { status : { message : Recomputation status reset to: pending , code : 200 } }","title":"Recomputations Requests"},{"location":"recomputations/#recomputations-requests","text":"API Calls for listing existing and creating new recomputation requests Name Description Shortcut GET: List Recomputation Requests This method can be used to retrieve a list of current Recomputation requests. Description POST: Create a new recomputation request This method can be used to insert a new recomputation request onto the Compute Engine. Description DELETE: Delete a specific recomputation This method can be used to delete a specific recomputation. Description POST: change status This method can be used to change status of a specific recomputation. Description DELETE: Reset status of recomputation This method can be used to reset status of a specific recomputation. Description","title":"Recomputations Requests"},{"location":"recomputations/#get-list-recomputation-requests","text":"This method can be used to retrieve a list of current Recomputation requests.","title":"[GET]: List Recomputation Requests"},{"location":"recomputations/#input","text":"GET /recomputations","title":"Input"},{"location":"recomputations/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"recomputations/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"recomputations/#response-body","text":"Json Response { root : [ { requester_name : Arya Stark , requester_email : astark@shadowguild.com , reason : power cuts , start_time : 2015-01-10T12:00:00Z , end_time : 2015-01-30T23:00:00Z , report : EGI_Critical , exclude : [ Gluster ], status : running , timestamp : 2015-02-01T14:58:40 , history : [ { status : pending , timestamp : 2015-02-01T14:58:40 }, { status : approved , timestamp : 2015-02-02T08:58:40 }, { status : running , timestamp : 2015-02-02T09:10:40 }, ] } ] }","title":"Response body"},{"location":"recomputations/#post-create-a-new-recomputation-request","text":"This method can be used to insert a new recomputation request onto the Compute Engine.","title":"[POST]: Create a new recomputation request"},{"location":"recomputations/#input_1","text":"POST /recomputations","title":"Input"},{"location":"recomputations/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"recomputations/#parameters","text":"Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES reason Explain the need for a recomputation YES requester_name The name of the person submitting the recomputation YES requester_email The email of the person submitting the recomputation YES report Report for which the recomputation is requested YES exclude Groups to be excluded from recomputation. If more than one group are to be excluded use the parameter as many times as needed within the same API call NO","title":"Parameters"},{"location":"recomputations/#response_1","text":"Headers: Status: 201 Created","title":"Response"},{"location":"recomputations/#delete-delete-a-specific-recomputation","text":"DELETE /recomputations/{ID}","title":"[DELETE]: Delete a specific recomputation"},{"location":"recomputations/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"recomputations/#response_2","text":"Status 200 OK","title":"Response"},{"location":"recomputations/#post-change-status-of-recomputation","text":"POST /recomputations/{ID}/status","title":"[POST]: Change status of recomputation"},{"location":"recomputations/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"recomputations/#post-body","text":"{ status : approved } Eligible recomputation status values: pending approved rejected running done If recomputation status input not in eligible values the api will respond with status code 404 : conflict","title":"POST body"},{"location":"recomputations/#response_3","text":"Status 200 OK","title":"Response"},{"location":"recomputations/#response-body_1","text":"Json Response { status : { message : Recomputation status updated successfully to: approved , code : 200 } }","title":"Response body"},{"location":"recomputations/#delete-reset-status-of-a-specific-recomputation","text":"DELETE /recomputations/{ID}/status","title":"[DELETE]: Reset status of a specific recomputation"},{"location":"recomputations/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"recomputations/#response_4","text":"Status 200 OK","title":"Response"},{"location":"recomputations/#response-body_2","text":"Json Response { status : { message : Recomputation status reset to: pending , code : 200 } }","title":"Response body"},{"location":"reports/","text":"API Calls Name Description Shortcut GET: List reports or single report This method can be used to retrieve a list of existing reports Description POST: Create a new report This method can be used to create a new report. Description PUT: Update an existing report This method can be used to update an existing report. Description DELETE: Delete an existing Report This method can be used to delete an existing report. Description [GET]: List Reports This method can be used to retrieve a list of existing reports or a single report according to its ID. Input URL /reports or /reports/{id} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : eba61a9e-22e9-4521-9e47-ecaa4a494364 , tenant : TenantA , disabled : false, info : { name : Report_A , description : report aaaaa , created : 2015-9-10 13:43:00 , updated : 2015-10-11 13:43:00 }, topology_schema : { group : { type : NGI , group : { type : SITE } } }, thresholds : { availability : 80.00, reliability : 85.00, uptime : 80.00, unknown : 10.00, downtime : 10.00 }, profiles : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , name : profile1 , type : metric }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e523 , name : profile2 , type : operations }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50q , name : profile3 , type : aggregation } ], filter_tags : [ { name : name1 , value : value1 , context : }, { name : name2 , value : value2 , context : } ] } ] } [POST]: Create a new report This method can be used to create a new report Input URL POST /reports Request headers x-api-key: shared_key_value Accept: application/json Request Body { info : { name : Report_A , description : report aaaaa }, topology_schema : { group : { type : ngi , group : { type : site } } }, thresholds : { availability : 80.00, reliability : 85.00, uptime : 80.00, unknown : 10.00, downtime : 10.00 }, profiles : [ { id : 422985a7-6386-4964-bc99-5ebd5d7b0aef , type : metric }, { id : 1aa74849-2310-4bbc-b63a-8995ac7888ea , type : aggregation }, { id : 1eafbdd1-1bbc-4861-b849-65394840762 , type : operations } ], filter_tags : [ { name : production , value : N }, { name : monitored , value : Y } ] } Response Headers: Status: 201 Created Response Body { status : { message : Successfully Created Report , code : 201 }, data : { id : eba61a9e-22e9-4521-9e47-ecaa4a494360 , links : { self : https://myapi.test.com/api/v2/reports/eba61a9e-22e9-4521-9e47-ecaa4a494360 } } } [PUT]: Update an existing report This method can be used to update an existing report. This will replace all the fields in the record so all the old fields that need to be kept must be included in the json of the update request body Input URL /reports/{id} Request headers x-api-key: shared_key_value Accept: application/json Request Body { disabled : true, weight : hepspec , info : { name : newname , description : newdescription , }, topology_schema : { group : { type : ngi , group : { type : fight } } }, thresholds : { availability : 90.00, reliability : 95.00, uptime : 90.00, unknown : 15.00, downtime : 15.00 }, profiles : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , type : metric , name : profile1 }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e523 , type : operations , name : profile2 }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50bq , type : aggregation , name : profile3 } ], filter_tags : [ { name : production , value : N }, { name : monitored , value : N } ] } Response Headers: Status: 200 OK Response Body { status : { message : Report was successfully updated , code : 200 } } [DELETE]: Delete an existing report This method can be used to update an existing report Input URL DELETE /reports/{id} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response Body { status : { message : Report was successfully deleted , code : 200 } }","title":"Reports"},{"location":"reports/#api-calls","text":"Name Description Shortcut GET: List reports or single report This method can be used to retrieve a list of existing reports Description POST: Create a new report This method can be used to create a new report. Description PUT: Update an existing report This method can be used to update an existing report. Description DELETE: Delete an existing Report This method can be used to delete an existing report. Description","title":"API Calls"},{"location":"reports/#get-list-reports","text":"This method can be used to retrieve a list of existing reports or a single report according to its ID.","title":"[GET]: List Reports"},{"location":"reports/#input","text":"","title":"Input"},{"location":"reports/#url","text":"/reports or /reports/{id}","title":"URL"},{"location":"reports/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"reports/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"reports/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : eba61a9e-22e9-4521-9e47-ecaa4a494364 , tenant : TenantA , disabled : false, info : { name : Report_A , description : report aaaaa , created : 2015-9-10 13:43:00 , updated : 2015-10-11 13:43:00 }, topology_schema : { group : { type : NGI , group : { type : SITE } } }, thresholds : { availability : 80.00, reliability : 85.00, uptime : 80.00, unknown : 10.00, downtime : 10.00 }, profiles : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , name : profile1 , type : metric }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e523 , name : profile2 , type : operations }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50q , name : profile3 , type : aggregation } ], filter_tags : [ { name : name1 , value : value1 , context : }, { name : name2 , value : value2 , context : } ] } ] }","title":"Response body"},{"location":"reports/#post-create-a-new-report","text":"This method can be used to create a new report","title":"[POST]: Create a new report"},{"location":"reports/#input_1","text":"","title":"Input"},{"location":"reports/#url_1","text":"POST /reports","title":"URL"},{"location":"reports/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"reports/#request-body","text":"{ info : { name : Report_A , description : report aaaaa }, topology_schema : { group : { type : ngi , group : { type : site } } }, thresholds : { availability : 80.00, reliability : 85.00, uptime : 80.00, unknown : 10.00, downtime : 10.00 }, profiles : [ { id : 422985a7-6386-4964-bc99-5ebd5d7b0aef , type : metric }, { id : 1aa74849-2310-4bbc-b63a-8995ac7888ea , type : aggregation }, { id : 1eafbdd1-1bbc-4861-b849-65394840762 , type : operations } ], filter_tags : [ { name : production , value : N }, { name : monitored , value : Y } ] }","title":"Request Body"},{"location":"reports/#response_1","text":"Headers: Status: 201 Created","title":"Response"},{"location":"reports/#response-body_1","text":"{ status : { message : Successfully Created Report , code : 201 }, data : { id : eba61a9e-22e9-4521-9e47-ecaa4a494360 , links : { self : https://myapi.test.com/api/v2/reports/eba61a9e-22e9-4521-9e47-ecaa4a494360 } } }","title":"Response Body"},{"location":"reports/#put-update-an-existing-report","text":"This method can be used to update an existing report. This will replace all the fields in the record so all the old fields that need to be kept must be included in the json of the update request body","title":"[PUT]: Update an existing report"},{"location":"reports/#input_2","text":"","title":"Input"},{"location":"reports/#url_2","text":"/reports/{id}","title":"URL"},{"location":"reports/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"reports/#request-body_1","text":"{ disabled : true, weight : hepspec , info : { name : newname , description : newdescription , }, topology_schema : { group : { type : ngi , group : { type : fight } } }, thresholds : { availability : 90.00, reliability : 95.00, uptime : 90.00, unknown : 15.00, downtime : 15.00 }, profiles : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , type : metric , name : profile1 }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e523 , type : operations , name : profile2 }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50bq , type : aggregation , name : profile3 } ], filter_tags : [ { name : production , value : N }, { name : monitored , value : N } ] }","title":"Request Body"},{"location":"reports/#response_2","text":"Headers: Status: 200 OK","title":"Response"},{"location":"reports/#response-body_2","text":"{ status : { message : Report was successfully updated , code : 200 } }","title":"Response Body"},{"location":"reports/#delete-delete-an-existing-report","text":"This method can be used to update an existing report","title":"[DELETE]: Delete an existing report"},{"location":"reports/#input_3","text":"","title":"Input"},{"location":"reports/#url_3","text":"DELETE /reports/{id}","title":"URL"},{"location":"reports/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"reports/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"reports/#response-body_3","text":"{ status : { message : Report was successfully deleted , code : 200 } }","title":"Response Body"},{"location":"results/","text":"Results Name Description Shortcut GET: List Availability and Reliability results for a group of endpoint groups This method retrieves the results of a specified group of endpoint group or multiple groups of endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description GET: List Availability and Reliability results for an endpoint group This method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description GET: List Availability and Reliability results for a Service Flavor This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description [GET]: List Availabilities and Reliabilities for groups of Endpoint Groups The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Group of Endpoint Groups. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single group of endpoint groups results or a bulk of group of endpoint groups results filtered by their type. [GET] Group of Endpoint groups Input /results/{report_name}/{group_type}?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}?[start_time] [end_time] [granularity] Query Parameters Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily Path Parameters Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO Headers Request x-api-key: tenant_key_value Accept: application/xml or application/json Response Status: 200 OK URL /api/v2/results/Report_A/GROUP/GROUP_A?start_time=2015-06-20T12:00:00Z end_time=2015-06-26T23:00:00Z granularity=daily Response Body root group name= GROUP_A type= GROUP results timestamp= 2015-06-22 availability= 68.13896116893515 reliability= 50.413931144915935 /results results timestamp= 2015-06-23 availability= 75.36324059247399 reliability= 80.8138510808647 /results /group /root [GET]: List Availabilities and Reliabilities for Endpoint Groups The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Endpoint Group. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single endpoint group results or a bulk of endpoint group results filtered by their type and if necessary their \"top-level\" group. [GET] Endpoint Groups Input /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}?[start_time] [end_time] [granularity] or simpler /results/{report_name}/{endpoint_group_type}?[start_time] [end_time] [granularity] and /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity] or simpler /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity] Query Parameters Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily Path Parameters Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_name} Name of the Group of Endpoint Groups. If no name is specified then all Endpoint Groups regardless of top-level group are retrieved. NO {group_type} Type of the Group of Endpoint Groups. If no type is specified then all groups are retrieved. NO {endpoint_group_name} Name of the the Endpoint Group. If no name is specified then all groups are retrieved according to the {endpoint_group_type} . NO {endpoint_group_type} Type of the the Endpoint Group. YES Headers Request x-api-key: tenant_key_value Accept: application/xml or application/json Response Status: 200 OK URL /api/v2/results/Report_A/SITE/ST01?start_time=2015-06-20T12:00:00Z end_time=2015-06-23T23:00:00Z granularity=daily Response Body root group name= GROUP_A type= GROUP group name= ST01 type= SITE results timestamp= 2015-06-22 availability= 66.7 reliability= 54.6 unknown= 0 uptime= 1 downtime= 0 /results results timestamp= 2015-06-23 availability= 100 reliability= 100 unknown= 0 uptime= 1 downtime= 0 /results /group /group /root [GET]: List Availabilities and Reliabilities for Endpoints The following methods can be used to obtain a tenant's Availability and Reliability result metrics for endpoints under a specific service or group. The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single service flavor results or a bulk of endpoint results. [GET] Endpoints A/R Input Request endpoint a/r under specific service: /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] Request endpoint a/r under specific endpoint group: /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] Query Parameters Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily Path Parameters Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO {endpoint_group_type} Type of the the Endpoint Group. YES {endpoint_group_name} Name of the the Endpoint Group. YES {service_name} Name of the specific service. NO {endpoint_name} Name of the specific endpoint. NO Headers Request x-api-key: tenant_key_value Accept: application/xml or application/json Response Status: 200 OK URL /api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily Response Body root group name= ST01 type= SITE group name= SF01 type= service results timestamp= 2015-06-22 availability= 98.26389 reliability= 98.26389 unknown= 0 uptime= 0.98264 downtime= 0 /results results timestamp= 2015-06-23 availability= 54.03509 reliability= 81.48148 unknown= 0.01042 uptime= 0.53472 downtime= 0.33333 /results /group group name= SF02 type= service results timestamp= 2015-06-22 availability= 96.875 reliability= 96.875 unknown= 0 uptime= 0.96875 downtime= 0 /results results timestamp= 2015-06-23 availability= 100 reliability= 100 unknown= 0 uptime= 1 downtime= 0 /results /group /group /root [GET]: List Availabilities and Reliabilities for Service Flavors The following methods can be used to obtain a tenant's Availability and Reliability result metrics per given Service Flavor(s). The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single service flavor results or a bulk of service flavor results. [GET] Service Flavors Input /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity] Query Parameters Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily Path Parameters Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO {endpoint_group_type} Type of the the Endpoint Group. YES {endpoint_group_name} Name of the the Endpoint Group. YES {service_flavor_type} Type of the Service Flavor. If no type is given then results for all Service Flavors under the given Endpoint Group will be provided. NO Headers Request x-api-key: tenant_key_value Accept: application/xml or application/json Response Status: 200 OK Request endpoint a/r under service: service_a URL /api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily Response Body { results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] }, { name : e02 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 96.875 , reliability : 96.875 , unknown : 0 , uptime : 0.96875 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 100 , reliability : 100 , unknown : 0 , uptime : 1 , downtime : 0 } ] } ] } ] } ] } Request endpoint a/r under endpoint group: ST01 URL /api/v2/results/Report_A/SITE/ST01/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily Response Body { results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] }, { name : e02 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 96.875 , reliability : 96.875 , unknown : 0 , uptime : 0.96875 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 100 , reliability : 100 , unknown : 0 , uptime : 1 , downtime : 0 } ] } ] } ] } ] } Request endpoint a/r for specific endpoint e01 under endpoint group: ST01 URL /api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints/e01?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily Response Body { results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] } ] } ] } ] }","title":"Results"},{"location":"results/#results","text":"Name Description Shortcut GET: List Availability and Reliability results for a group of endpoint groups This method retrieves the results of a specified group of endpoint group or multiple groups of endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description GET: List Availability and Reliability results for an endpoint group This method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description GET: List Availability and Reliability results for a Service Flavor This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity. Description","title":"Results"},{"location":"results/#get-list-availabilities-and-reliabilities-for-groups-of-endpoint-groups","text":"The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Group of Endpoint Groups. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single group of endpoint groups results or a bulk of group of endpoint groups results filtered by their type.","title":"[GET]: List Availabilities and Reliabilities for groups of Endpoint Groups"},{"location":"results/#get-group-of-endpoint-groups","text":"","title":"[GET] Group of Endpoint groups"},{"location":"results/#input","text":"/results/{report_name}/{group_type}?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}?[start_time] [end_time] [granularity]","title":"Input"},{"location":"results/#query-parameters","text":"Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily","title":"Query Parameters"},{"location":"results/#path-parameters","text":"Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO","title":"Path Parameters"},{"location":"results/#headers","text":"","title":"Headers"},{"location":"results/#request","text":"x-api-key: tenant_key_value Accept: application/xml or application/json","title":"Request"},{"location":"results/#response","text":"Status: 200 OK","title":"Response"},{"location":"results/#url","text":"/api/v2/results/Report_A/GROUP/GROUP_A?start_time=2015-06-20T12:00:00Z end_time=2015-06-26T23:00:00Z granularity=daily","title":"URL"},{"location":"results/#response-body","text":"root group name= GROUP_A type= GROUP results timestamp= 2015-06-22 availability= 68.13896116893515 reliability= 50.413931144915935 /results results timestamp= 2015-06-23 availability= 75.36324059247399 reliability= 80.8138510808647 /results /group /root","title":"Response Body"},{"location":"results/#get-list-availabilities-and-reliabilities-for-endpoint-groups","text":"The following methods can be used to obtain a tenant's Availability and Reliability result metrics per Endpoint Group. The api authenticates the tenant using the api-key within the x-api-key header. User can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single endpoint group results or a bulk of endpoint group results filtered by their type and if necessary their \"top-level\" group.","title":"[GET]: List Availabilities and Reliabilities for Endpoint Groups"},{"location":"results/#get-endpoint-groups","text":"","title":"[GET] Endpoint Groups"},{"location":"results/#input_1","text":"/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}?[start_time] [end_time] [granularity] or simpler /results/{report_name}/{endpoint_group_type}?[start_time] [end_time] [granularity] and /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity] or simpler /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}?[start_time] [end_time] [granularity]","title":"Input"},{"location":"results/#query-parameters_1","text":"Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily","title":"Query Parameters"},{"location":"results/#path-parameters_1","text":"Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_name} Name of the Group of Endpoint Groups. If no name is specified then all Endpoint Groups regardless of top-level group are retrieved. NO {group_type} Type of the Group of Endpoint Groups. If no type is specified then all groups are retrieved. NO {endpoint_group_name} Name of the the Endpoint Group. If no name is specified then all groups are retrieved according to the {endpoint_group_type} . NO {endpoint_group_type} Type of the the Endpoint Group. YES","title":"Path Parameters"},{"location":"results/#headers_1","text":"","title":"Headers"},{"location":"results/#request_1","text":"x-api-key: tenant_key_value Accept: application/xml or application/json","title":"Request"},{"location":"results/#response_1","text":"Status: 200 OK","title":"Response"},{"location":"results/#url_1","text":"/api/v2/results/Report_A/SITE/ST01?start_time=2015-06-20T12:00:00Z end_time=2015-06-23T23:00:00Z granularity=daily","title":"URL"},{"location":"results/#response-body_1","text":"root group name= GROUP_A type= GROUP group name= ST01 type= SITE results timestamp= 2015-06-22 availability= 66.7 reliability= 54.6 unknown= 0 uptime= 1 downtime= 0 /results results timestamp= 2015-06-23 availability= 100 reliability= 100 unknown= 0 uptime= 1 downtime= 0 /results /group /group /root","title":"Response Body"},{"location":"results/#get-list-availabilities-and-reliabilities-for-endpoints","text":"The following methods can be used to obtain a tenant's Availability and Reliability result metrics for endpoints under a specific service or group. The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single service flavor results or a bulk of endpoint results.","title":"[GET]: List Availabilities and Reliabilities for Endpoints"},{"location":"results/#get-endpoints-ar","text":"","title":"[GET] Endpoints A/R"},{"location":"results/#input_2","text":"Request endpoint a/r under specific service: /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] Request endpoint a/r under specific endpoint group: /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/endpoints/{endpoint_name}?[start_time] [end_time] [granularity]","title":"Input"},{"location":"results/#query-parameters_2","text":"Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily","title":"Query Parameters"},{"location":"results/#path-parameters_2","text":"Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO {endpoint_group_type} Type of the the Endpoint Group. YES {endpoint_group_name} Name of the the Endpoint Group. YES {service_name} Name of the specific service. NO {endpoint_name} Name of the specific endpoint. NO","title":"Path Parameters"},{"location":"results/#headers_2","text":"","title":"Headers"},{"location":"results/#request_2","text":"x-api-key: tenant_key_value Accept: application/xml or application/json","title":"Request"},{"location":"results/#response_2","text":"Status: 200 OK","title":"Response"},{"location":"results/#url_2","text":"/api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily","title":"URL"},{"location":"results/#response-body_2","text":"root group name= ST01 type= SITE group name= SF01 type= service results timestamp= 2015-06-22 availability= 98.26389 reliability= 98.26389 unknown= 0 uptime= 0.98264 downtime= 0 /results results timestamp= 2015-06-23 availability= 54.03509 reliability= 81.48148 unknown= 0.01042 uptime= 0.53472 downtime= 0.33333 /results /group group name= SF02 type= service results timestamp= 2015-06-22 availability= 96.875 reliability= 96.875 unknown= 0 uptime= 0.96875 downtime= 0 /results results timestamp= 2015-06-23 availability= 100 reliability= 100 unknown= 0 uptime= 1 downtime= 0 /results /group /group /root","title":"Response Body"},{"location":"results/#get-list-availabilities-and-reliabilities-for-service-flavors","text":"The following methods can be used to obtain a tenant's Availability and Reliability result metrics per given Service Flavor(s). The api authenticates the tenant using the api-key within the x-api-key header. The user can specify time granularity ( monthly or daily ) for retrieved results and also format using the Accept header. Depending on the form of the request the user can request a single service flavor results or a bulk of service flavor results.","title":"[GET]: List Availabilities and Reliabilities for Service Flavors"},{"location":"results/#get-service-flavors","text":"","title":"[GET] Service Flavors"},{"location":"results/#input_3","text":"/results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity] or /results/{report_name}/{group_type}/{group_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services?[start_time] [end_time] [granularity] or /results/{report_name}/{endpoint_group_type}/{endpoint_group_name}/services/{service_flavor_type}?[start_time] [end_time] [granularity]","title":"Input"},{"location":"results/#query-parameters_3","text":"Type Description Required Default value [start_time] UTC time in W3C format YES [end_time] UTC time in W3C format YES [granularity] Granularity of time that will be used to present data. Possible values are monthly or daily NO daily","title":"Query Parameters"},{"location":"results/#path-parameters_3","text":"Name Description Required Default value {report_name} Name of the report that contains all the information about the profile, filter tags, group types etc. YES {group_type} Type of the Group of Endpoint Groups. NO {group_name} Name of the Group of Endpoint Groups. NO {endpoint_group_type} Type of the the Endpoint Group. YES {endpoint_group_name} Name of the the Endpoint Group. YES {service_flavor_type} Type of the Service Flavor. If no type is given then results for all Service Flavors under the given Endpoint Group will be provided. NO","title":"Path Parameters"},{"location":"results/#headers_3","text":"","title":"Headers"},{"location":"results/#request_3","text":"x-api-key: tenant_key_value Accept: application/xml or application/json","title":"Request"},{"location":"results/#response_3","text":"Status: 200 OK","title":"Response"},{"location":"results/#request-endpoint-ar-under-service-service_a","text":"","title":"Request endpoint a/r under service: service_a"},{"location":"results/#url_3","text":"/api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily","title":"URL"},{"location":"results/#response-body_3","text":"{ results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] }, { name : e02 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 96.875 , reliability : 96.875 , unknown : 0 , uptime : 0.96875 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 100 , reliability : 100 , unknown : 0 , uptime : 1 , downtime : 0 } ] } ] } ] } ] }","title":"Response Body"},{"location":"results/#request-endpoint-ar-under-endpoint-group-st01","text":"","title":"Request endpoint a/r under endpoint group: ST01"},{"location":"results/#url_4","text":"/api/v2/results/Report_A/SITE/ST01/endpoints?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily","title":"URL"},{"location":"results/#response-body_4","text":"{ results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] }, { name : e02 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 96.875 , reliability : 96.875 , unknown : 0 , uptime : 0.96875 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 100 , reliability : 100 , unknown : 0 , uptime : 1 , downtime : 0 } ] } ] } ] } ] }","title":"Response Body"},{"location":"results/#request-endpoint-ar-for-specific-endpoint-e01-under-endpoint-group-st01","text":"","title":"Request endpoint a/r for specific endpoint e01 under endpoint group: ST01"},{"location":"results/#url_5","text":"/api/v2/results/Report_A/SITE/ST01/services/service_a/endpoints/e01?start_time=2015-06-22T00:00:00Z end_time=2015-06-23T23:23:59Z granularity=daily","title":"URL"},{"location":"results/#response-body_5","text":"{ results : [ { name : ST01 , type : SITE , serviceflavors : [ { name : service_a , type : service , endpoints : [ { name : e01 , type : endpoint , results : [ { timestamp : 2015-06-22 , availability : 98.26389 , reliability : 98.26389 , unknown : 0 , uptime : 0.98264 , downtime : 0 }, { timestamp : 2015-06-23 , availability : 54.03509 , reliability : 81.48148 , unknown : 0.01042 , uptime : 0.53472 , downtime : 0.33333 } ] } ] } ] } ] }","title":"Response Body"},{"location":"status/","text":"Status results API calls for retrieving monitoring status results Name Description Shortcut GET: List Service Metric Status Timelines This method may be used to retrieve a specific service metric status timeline (applies on a specific service endpoint). Description GET: List Service Endpoint Status Timelines This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type). Description GET: List Service Status Timelines This method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group). Description GET: List Endpoint Group Status Timelines This method may be used to retrieve endpoint group status timelines. Description GET: Metric Result This method may be used to retrieve a specific and detailed metric result. Description [GET]: List Service Metric Status Timelines This method may be used to retrieve a specific service metric status timeline (applies on a specific host endpoint and a specific service flavor). Input List All metrics: /status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints/{hostname}/metrics?[start_time] [end_time] List a specific metric: /status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}/metrics/{metric_name}?[start_time] [end_time] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group YES hostname hostname of service endpoint YES metric_name name of the metric NO Url Parameters Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when metric_name is supplied, the request returns results for a specific metric. Else returns results for all available metrics for the specific endpoint (and report ) Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body List All metrics: Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr metric name= emi.cream.CREAMCE-JobSubmit status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric metric name= emi.wn.WN-Bi status timestamp= 2015-04-30T22:59:00Z status= OK /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T03:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , metrics : [ { name : emi.cream.CREAMCE-JobSubmit , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : emi.wn.WN-Bi , statuses : [ { timestamp : 2015-04-30T22:59:00Z , value : OK }, { timestamp : 2015-05-02T00:00:00Z , value : OK }, { timestamp : 2015-05-03T01:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } ] } List specific metric ( metric_name=emi.cream.CREAM-CE-JobSubmit ): Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics/emi.cream.CREAMCE-JobSubmit?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr metric name= emi.cream.CREAMCE-JobSubmit status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , metrics : [ { name : emi.cream.CREAMCE-JobSubmit , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-02T01:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } ] } [GET]: List Service Endpoint Status Timelines This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type). Input List All endpoints: /status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints?[start_time] [end_time] List a specific endpoint: /status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}?[start_time] [end_time] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group YES hostname hostname of service endpoint NO Url Parameters Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when hostname is supplied, the request returns results for a specific endpoint. Else returns results for all available metrics for the specific endpoint (and report ) Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body List All metrics: Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint endpoint name= cream02.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : cream02.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } List specific endpoint ( hostname=cream01.afroditi.gr ): Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } [GET]: List Service Status Timelines This method may be used to retrieve a specific service flavor status timeline (applies for a specific service endpoint group). Input List All service types: /status/{report}/{group_type}/{group_name}/services[start_time] [end_time] List a specific service type: /status/{report}/{group_type}/{group_name}/services/{service_type}[start_time] [end_time] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group NO Url Parameters Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when service_name is supplied, the request returns results for a specific service type. Else returns results for all available service types for the specific endpoint_group (and report ) Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body List All service types: Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group group name= SRMv2 type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : SRMv2 , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } List specific service type ( service_type=CREAM-CE ): Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } [GET]: List Endpoint Group Status Timelines This method may be used to retrieve status timelines for endpoint groups. Input List All endpoint groups of specific type: /status/{report}/{group_type}[start_time] [end_time] List a specific endpoint group of specific type: /status/{report}/{group_type}/{group_name}[start_time] [end_time] Path Parameters Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group NO Url Parameters Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when group_name is supplied, the request returns results for a specific endpoint group. Else returns results for all available endpoint groups of the specific group_type Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body List All endpoint groups: Example Request: URL: /status/EGI_CRITICAL/SITES?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T01:00:00Z status= WARNING /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group group name= HG-01-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= UNKNOWN /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T01:00:00Z , value : WARNING }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : HG-01-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : UNKNOWN }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } List specific endpoint group ( group_name=HG-03-AUTH ): Example Request: URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml Example Response: Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= WARNING /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : WARNING }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } [GET]: Metric Result This method may be used to retrieve a detailed metric result. Input /metric_result/{hostname}/{metric_name}?[exec_time] Path Parameters Name Description Required Default value {hostname} Name of the endpoint YES {metric_name} Name of the metric (probe) for which results are queries YES URL Parameters Type Description Required Default value [exec_time] UTC time in W3C format YES Headers x-api-key: shared_key_value Accept: application/json or application/xml Response Code Status: 200 OK Response body Example Request: URL: /api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml Example Response: Code: Status: 200 OK Response body (XML): root host name= www.example.com metric name= httpd_check status timestamp= 2015-06-20T12:00:00Z value= CRITICAL summary httpd status is CRITICAL /summary message httpd service seems down. Failed to connect to port 80. /message /status /metric /host /root Response body (JSON): { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : CRITICAL , Summary : httpd status is CRITICAL , Message : httpd service seems down. Failed to connect to port 80. } ] } ] } ] }","title":"Status Results"},{"location":"status/#status-results","text":"API calls for retrieving monitoring status results Name Description Shortcut GET: List Service Metric Status Timelines This method may be used to retrieve a specific service metric status timeline (applies on a specific service endpoint). Description GET: List Service Endpoint Status Timelines This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type). Description GET: List Service Status Timelines This method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group). Description GET: List Endpoint Group Status Timelines This method may be used to retrieve endpoint group status timelines. Description GET: Metric Result This method may be used to retrieve a specific and detailed metric result. Description","title":"Status results"},{"location":"status/#get-list-service-metric-status-timelines","text":"This method may be used to retrieve a specific service metric status timeline (applies on a specific host endpoint and a specific service flavor).","title":"[GET]: List Service Metric Status Timelines"},{"location":"status/#input","text":"","title":"Input"},{"location":"status/#list-all-metrics","text":"/status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints/{hostname}/metrics?[start_time] [end_time]","title":"List All metrics:"},{"location":"status/#list-a-specific-metric","text":"/status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}/metrics/{metric_name}?[start_time] [end_time]","title":"List a specific metric:"},{"location":"status/#path-parameters","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group YES hostname hostname of service endpoint YES metric_name name of the metric NO","title":"Path Parameters"},{"location":"status/#url-parameters","text":"Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when metric_name is supplied, the request returns results for a specific metric. Else returns results for all available metrics for the specific endpoint (and report )","title":"Url Parameters"},{"location":"status/#headers","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"status/#response-code","text":"Status: 200 OK","title":"Response Code"},{"location":"status/#response-body","text":"","title":"Response body"},{"location":"status/#list-all-metrics_1","text":"","title":"List All metrics:"},{"location":"status/#example-request","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"status/#example-response","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr metric name= emi.cream.CREAMCE-JobSubmit status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric metric name= emi.wn.WN-Bi status timestamp= 2015-04-30T22:59:00Z status= OK /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T03:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , metrics : [ { name : emi.cream.CREAMCE-JobSubmit , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : emi.wn.WN-Bi , statuses : [ { timestamp : 2015-04-30T22:59:00Z , value : OK }, { timestamp : 2015-05-02T00:00:00Z , value : OK }, { timestamp : 2015-05-03T01:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } ] }","title":"Example Response:"},{"location":"status/#list-specific-metric","text":"( metric_name=emi.cream.CREAM-CE-JobSubmit ):","title":"List specific metric"},{"location":"status/#example-request_1","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr/metrics/emi.cream.CREAMCE-JobSubmit?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml","title":"Example Request:"},{"location":"status/#example-response_1","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr metric name= emi.cream.CREAMCE-JobSubmit status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /metric /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , metrics : [ { name : emi.cream.CREAMCE-JobSubmit , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-02T01:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] } ] }","title":"Example Response:"},{"location":"status/#get-list-service-endpoint-status-timelines","text":"This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type).","title":"[GET]: List Service Endpoint Status Timelines"},{"location":"status/#input_1","text":"","title":"Input"},{"location":"status/#list-all-endpoints","text":"/status/{report}/{group_type}/{group_name}/services/{service_type}/endpoints?[start_time] [end_time]","title":"List All endpoints:"},{"location":"status/#list-a-specific-endpoint","text":"/status/{report}/{endpoint_group_type}/{endpoint_group_name}/services/{service_type}/endpoints/{hostname}?[start_time] [end_time]","title":"List a specific endpoint:"},{"location":"status/#path-parameters_1","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group YES hostname hostname of service endpoint NO","title":"Path Parameters"},{"location":"status/#url-parameters_1","text":"Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when hostname is supplied, the request returns results for a specific endpoint. Else returns results for all available metrics for the specific endpoint (and report )","title":"Url Parameters"},{"location":"status/#headers_1","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"status/#response-code_1","text":"Status: 200 OK","title":"Response Code"},{"location":"status/#response-body_1","text":"","title":"Response body"},{"location":"status/#list-all-metrics_2","text":"","title":"List All metrics:"},{"location":"status/#example-request_2","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"status/#example-response_2","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint endpoint name= cream02.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : cream02.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] }","title":"Example Response:"},{"location":"status/#list-specific-endpoint","text":"( hostname=cream01.afroditi.gr ):","title":"List specific endpoint"},{"location":"status/#example-request_3","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE/endpoints/cream01.afroditi.gr?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"status/#example-response_3","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service endpoint name= cream01.afroditi.gr status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /endpoint /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , endpoints : [ { name : cream01.afroditi.gr , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] } ] }","title":"Example Response:"},{"location":"status/#get-list-service-status-timelines","text":"This method may be used to retrieve a specific service flavor status timeline (applies for a specific service endpoint group).","title":"[GET]: List Service Status Timelines"},{"location":"status/#input_2","text":"","title":"Input"},{"location":"status/#list-all-service-types","text":"/status/{report}/{group_type}/{group_name}/services[start_time] [end_time]","title":"List All service types:"},{"location":"status/#list-a-specific-service-type","text":"/status/{report}/{group_type}/{group_name}/services/{service_type}[start_time] [end_time]","title":"List a specific service type:"},{"location":"status/#path-parameters_2","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group YES service_type type of endpoint group NO","title":"Path Parameters"},{"location":"status/#url-parameters_2","text":"Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when service_name is supplied, the request returns results for a specific service type. Else returns results for all available service types for the specific endpoint_group (and report )","title":"Url Parameters"},{"location":"status/#headers_2","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"status/#response-code_2","text":"Status: 200 OK","title":"Response Code"},{"location":"status/#response-body_2","text":"","title":"Response body"},{"location":"status/#list-all-service-types_1","text":"","title":"List All service types:"},{"location":"status/#example-request_4","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"status/#example-response_4","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group group name= SRMv2 type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : SRMv2 , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] }","title":"Example Response:"},{"location":"status/#list-specific-service-type","text":"( service_type=CREAM-CE ):","title":"List specific service type"},{"location":"status/#example-request_5","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH/services/CREAM-CE?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: shared_key_value Accept: application/json or application/xml","title":"Example Request:"},{"location":"status/#example-response_5","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES group name= CREAM-CE type= service status timestamp= 2015-04-30T23:59:00Z status= OK /status status timestamp= 2015-05-01T01:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , services : [ { name : CREAM-CE , type : service , statuses : [ { timestamp : 2015-04-30T23:59:00Z , value : OK }, { timestamp : 2015-05-01T01:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] } ] }","title":"Example Response:"},{"location":"status/#get-list-endpoint-group-status-timelines","text":"This method may be used to retrieve status timelines for endpoint groups.","title":"[GET]: List Endpoint Group Status Timelines"},{"location":"status/#input_3","text":"","title":"Input"},{"location":"status/#list-all-endpoint-groups-of-specific-type","text":"/status/{report}/{group_type}[start_time] [end_time]","title":"List All endpoint groups of specific type:"},{"location":"status/#list-a-specific-endpoint-group-of-specific-type","text":"/status/{report}/{group_type}/{group_name}[start_time] [end_time]","title":"List a specific endpoint group of specific type:"},{"location":"status/#path-parameters_3","text":"Type Description Required Default value report name of the report used YES group_type type of endpoint group YES group_name name of endpoint group NO","title":"Path Parameters"},{"location":"status/#url-parameters_3","text":"Type Description Required Default value start_time UTC time in W3C format YES end_time UTC time in W3C format YES Notes : group_type and group_name in the specific request refer always to endpoint groups (eg. SITES ). when group_name is supplied, the request returns results for a specific endpoint group. Else returns results for all available endpoint groups of the specific group_type","title":"Url Parameters"},{"location":"status/#headers_3","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"status/#response-code_3","text":"Status: 200 OK","title":"Response Code"},{"location":"status/#response-body_3","text":"","title":"Response body"},{"location":"status/#list-all-endpoint-groups","text":"","title":"List All endpoint groups:"},{"location":"status/#example-request_6","text":"URL: /status/EGI_CRITICAL/SITES?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml","title":"Example Request:"},{"location":"status/#example-response_6","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T01:00:00Z status= WARNING /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group group name= HG-01-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= UNKNOWN /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T01:00:00Z , value : WARNING }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] }, { name : HG-01-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : UNKNOWN }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] }","title":"Example Response:"},{"location":"status/#list-specific-endpoint-group","text":"( group_name=HG-03-AUTH ):","title":"List specific endpoint group"},{"location":"status/#example-request_7","text":"URL: /status/EGI_CRITICAL/SITES/HG-03-AUTH?start_time=2015-05-01T00:00:00Z end_time=2015-05-01T23:59:59Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml","title":"Example Request:"},{"location":"status/#example-response_7","text":"Code: Status: 200 OK Response body (XML): root group name= HG-03-AUTH type= SITES status timestamp= 2015-05-01T00:00:00Z status= CRITICAL /status status timestamp= 2015-05-01T02:00:00Z status= WARNING /status status timestamp= 2015-05-01T05:00:00Z status= OK /status status timestamp= 2015-05-01T23:59:59Z status= OK /status /group /root Response body (JSON): { groups : [ { name : HG-03-AUTH , type : SITES , statuses : [ { timestamp : 2015-05-01T00:00:00Z , value : CRITICAL }, { timestamp : 2015-05-01T02:00:00Z , value : WARNING }, { timestamp : 2015-05-01T05:00:00Z , value : OK }, { timestamp : 2015-05-01T23:59:59Z , value : OK } ] } ] }","title":"Example Response:"},{"location":"status/#get-metric-result","text":"This method may be used to retrieve a detailed metric result.","title":"[GET]: Metric Result"},{"location":"status/#input_4","text":"/metric_result/{hostname}/{metric_name}?[exec_time]","title":"Input"},{"location":"status/#path-parameters_4","text":"Name Description Required Default value {hostname} Name of the endpoint YES {metric_name} Name of the metric (probe) for which results are queries YES","title":"Path Parameters"},{"location":"status/#url-parameters_4","text":"Type Description Required Default value [exec_time] UTC time in W3C format YES","title":"URL Parameters"},{"location":"status/#headers_4","text":"x-api-key: shared_key_value Accept: application/json or application/xml","title":"Headers"},{"location":"status/#response-code_4","text":"Status: 200 OK","title":"Response Code"},{"location":"status/#response-body_4","text":"","title":"Response body"},{"location":"status/#example-request_8","text":"URL: /api/v2/metric_result/www.example.com/httpd_check?exec_time=2015-06-20T12:00:00Z Headers: x-api-key: INSERTTENANTKEYHERE Accept: application/xml","title":"Example Request:"},{"location":"status/#example-response_8","text":"Code: Status: 200 OK Response body (XML): root host name= www.example.com metric name= httpd_check status timestamp= 2015-06-20T12:00:00Z value= CRITICAL summary httpd status is CRITICAL /summary message httpd service seems down. Failed to connect to port 80. /message /status /metric /host /root Response body (JSON): { root : [ { Name : www.example.com , Metrics : [ { Name : httpd_check , Details : [ { Timestamp : 2015-06-20T12:00:00Z , Value : CRITICAL , Summary : httpd status is CRITICAL , Message : httpd service seems down. Failed to connect to port 80. } ] } ] } ] }","title":"Example Response:"},{"location":"tenants/","text":"API Calls Name Description Shortcut GET: List Tenants This method can be used to retrieve a list of current tenants Description GET: List a specific tenant This method can be used to retrieve a specific metric tenant based on its id. Description POST: Create a new tenant This method can be used to create a new tenant Description PUT: Update a tenant This method can be used to update information on an existing tenant Description DELETE: Delete a tenant This method can be used to delete an existing tenant Description GET: Get a tenant's arg engine status This method can be used to get status for a specific tenant Description PUT: Update a tenant's engine status This method can be used to update argo engine status information for a specific tenant Description [GET]: List Tenants This method can be used to retrieve a list of current tenants Note : This method restricts tenant database and user information when the x-api-key token holder is a restricted super admin Note : This method shows only tenants that have admin ui users when the x-api-key token holder is a super_admin_ui Input GET /admin/tenants Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body for super admin users Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : Tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb1.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { id : acb74194-553a-11e9-8647-d663bd873d94 , name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ viewer ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, topology : { type : GOCDB , feed : gocdb2.example.foo }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] }, { id : acb74194-553a-11e9-8647-d663bd873d97 , name : starlord , email : starlord@email.com , api_key : ST4RL0RDK3Y , roles : [ admin ] } ] } ] } Response body for restricted super admin users: Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : Tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb1.example.foo } }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo } } ] } Response body for super_admin_ui users: Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] } ] } ] } [GET]: List A Specific tenant This method can be used to retrieve specific tenant based on its id Note : This method shows only tenants that have admin ui users when the x-api-key token holder is a super_admin_ui Input GET /admin/tenants/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb1.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] }, { id : acb74194-553a-11e9-8647-d663bd873d97 , name : starlord , email : starlord@email.com , api_key : ST4RL0RDK3Y , roles : [ admin ] } ] } ] } Response body for super_admin_ui users: Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] } ] } ] } [GET]: List A Specific User This method can be used to retrieve specific user based on its id Input GET /admin/users:byID/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] } ] } NOTE Specifying the filter, export=flat , it will return a flat user json object { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] } [POST]: Create a new Tenant This method can be used to insert a new tenant Input POST /admin/tenants Request headers x-api-key: shared_key_value Accept: application/json POST BODY { info : { name : Tenant1 , email : email1@tenant1.com , website : www.tenant1.com , description : a simple tenant , image : url to image , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb.example.foo }, users : [ { name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ admin ] } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Tenant was succesfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/admin/tenants/{{ID}} } } } [PUT]: Update information on an existing tenant This method can be used to update information on an existing tenant Input PUT /admin/tenants/{ID} Request headers x-api-key: shared_key_value Accept: application/json PUT BODY { info : { name : Tenant1 , email : email1@tenant1.com , description : a changed description , image : a changed url to nwe image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb.example.foo }, users : [ { name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ admin ] } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Tenant successfully updated , code : 200 } } [DELETE]: Delete an existing tenant This method can be used to delete an existing tenant Input DELETE /admin/tenants/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Tenant Successfully Deleted , code : 200 } } [GET]: List A Specific tenant's argo-engine status This method can be used to retrieve specific tenant's status based on its id Input GET /admin/tenants/{ID}/status Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, status : { total_status : false, ams : { metric_data : { ingestion : false, publishing : false, status_streaming : false, messages_arrived : 0 }, sync_data : { ingestion : false, publishing : false, status_streaming : false, messages_arrived : 0 } }, hdfs : { metric_data : false }, engine_config : false, last_check : } } ] } [PUT]: Update argo-engine status information on an existing tenant This method can be used to update status information on an existing tenant Input PUT /admin/tenants/{ID}/status Request headers x-api-key: shared_key_value Accept: application/json PUT BODY { ams : { metric_data : { ingestion : true, publishing : true, status_streaming : false, messages_arrived : 100 }, sync_data : { ingestion : true, publishing : false, status_streaming : true, messages_arrived : 200 } }, hdfs : { metric_data : true, sync_data : { Critical : { downtimes : true, group_endpoints : true, blank_recompuation : true, group_groups : true, weights : true, operations_profile : true, metric_profile : true, aggregation_profile : true } } }, engine_config : true, last_check : 2018-08-10T12:32:45Z } Response Headers: Status: 200 OK Response body Json Response { status : { message : Tenant successfully updated , code : 200 } }","title":"Tenants"},{"location":"tenants/#api-calls","text":"Name Description Shortcut GET: List Tenants This method can be used to retrieve a list of current tenants Description GET: List a specific tenant This method can be used to retrieve a specific metric tenant based on its id. Description POST: Create a new tenant This method can be used to create a new tenant Description PUT: Update a tenant This method can be used to update information on an existing tenant Description DELETE: Delete a tenant This method can be used to delete an existing tenant Description GET: Get a tenant's arg engine status This method can be used to get status for a specific tenant Description PUT: Update a tenant's engine status This method can be used to update argo engine status information for a specific tenant Description","title":"API Calls"},{"location":"tenants/#get-list-tenants","text":"This method can be used to retrieve a list of current tenants Note : This method restricts tenant database and user information when the x-api-key token holder is a restricted super admin Note : This method shows only tenants that have admin ui users when the x-api-key token holder is a super_admin_ui","title":"[GET]: List Tenants"},{"location":"tenants/#input","text":"GET /admin/tenants","title":"Input"},{"location":"tenants/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body-for-super-admin-users","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : Tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb1.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { id : acb74194-553a-11e9-8647-d663bd873d94 , name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ viewer ] } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, topology : { type : GOCDB , feed : gocdb2.example.foo }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] }, { id : acb74194-553a-11e9-8647-d663bd873d97 , name : starlord , email : starlord@email.com , api_key : ST4RL0RDK3Y , roles : [ admin ] } ] } ] }","title":"Response body for super admin users"},{"location":"tenants/#response-body-for-restricted-super-admin-users","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : Tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb1.example.foo } }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo } } ] }","title":"Response body for restricted super admin users:"},{"location":"tenants/#response-body-for-super_admin_ui-users","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] } ] } ] }","title":"Response body for super_admin_ui users:"},{"location":"tenants/#get-list-a-specific-tenant","text":"This method can be used to retrieve specific tenant based on its id Note : This method shows only tenants that have admin ui users when the x-api-key token holder is a super_admin_ui","title":"[GET]: List A Specific tenant"},{"location":"tenants/#input_1","text":"GET /admin/tenants/{ID}","title":"Input"},{"location":"tenants/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb1.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] }, { id : acb74194-553a-11e9-8647-d663bd873d97 , name : starlord , email : starlord@email.com , api_key : ST4RL0RDK3Y , roles : [ admin ] } ] } ] }","title":"Response body"},{"location":"tenants/#response-body-for-super_admin_ui-users_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , info : { name : tenant2 , email : tenant2@email.com , description : a simple tenant , image : url to image , website : www.tenant2.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, topology : { type : GOCDB , feed : gocdb2.example.foo }, users : [ { id : acb74194-553a-11e9-8647-d663bd873d95 , name : groot , email : groot@email.com , api_key : GR00TK3Y , roles : [ admin , admin_ui ] } ] } ] }","title":"Response body for super_admin_ui users:"},{"location":"tenants/#get-list-a-specific-user","text":"This method can be used to retrieve specific user based on its id","title":"[GET]: List A Specific User"},{"location":"tenants/#input_2","text":"GET /admin/users:byID/{ID}","title":"Input"},{"location":"tenants/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#response_2","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] } ] }","title":"Response body"},{"location":"tenants/#note","text":"Specifying the filter, export=flat , it will return a flat user json object { id : acb74194-553a-11e9-8647-d663bd873d93 , name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }","title":"NOTE"},{"location":"tenants/#post-create-a-new-tenant","text":"This method can be used to insert a new tenant","title":"[POST]: Create a new Tenant"},{"location":"tenants/#input_3","text":"POST /admin/tenants","title":"Input"},{"location":"tenants/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#post-body","text":"{ info : { name : Tenant1 , email : email1@tenant1.com , website : www.tenant1.com , description : a simple tenant , image : url to image , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb.example.foo }, users : [ { name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ admin ] } ] }","title":"POST BODY"},{"location":"tenants/#response_3","text":"Headers: Status: 201 Created","title":"Response"},{"location":"tenants/#response-body_2","text":"Json Response { status : { message : Tenant was succesfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/admin/tenants/{{ID}} } } }","title":"Response body"},{"location":"tenants/#put-update-information-on-an-existing-tenant","text":"This method can be used to update information on an existing tenant","title":"[PUT]: Update information on an existing tenant"},{"location":"tenants/#input_4","text":"PUT /admin/tenants/{ID}","title":"Input"},{"location":"tenants/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#put-body","text":"{ info : { name : Tenant1 , email : email1@tenant1.com , description : a changed description , image : a changed url to nwe image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, db_conf : [ { store : ar , server : a.mongodb.org , port : 27017, database : ar_db , username : admin , password : 3NCRYPT3D }, { store : status , server : b.mongodb.org , port : 27017, database : status_db , username : admin , password : 3NCRYPT3D } ], topology : { type : GOCDB , feed : gocdb.example.foo }, users : [ { name : cap , email : cap@email.com , api_key : C4PK3Y , roles : [ admin ] }, { name : thor , email : thor@email.com , api_key : TH0RK3Y , roles : [ admin ] } ] }","title":"PUT BODY"},{"location":"tenants/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body_3","text":"Json Response { status : { message : Tenant successfully updated , code : 200 } }","title":"Response body"},{"location":"tenants/#delete-delete-an-existing-tenant","text":"This method can be used to delete an existing tenant","title":"[DELETE]: Delete an existing tenant"},{"location":"tenants/#input_5","text":"DELETE /admin/tenants/{ID}","title":"Input"},{"location":"tenants/#request-headers_5","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#response_5","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body_4","text":"Json Response { status : { message : Tenant Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"tenants/#get-list-a-specific-tenants-argo-engine-status","text":"This method can be used to retrieve specific tenant's status based on its id","title":"[GET]: List A Specific tenant's argo-engine status"},{"location":"tenants/#input_6","text":"GET /admin/tenants/{ID}/status","title":"Input"},{"location":"tenants/#request-headers_6","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#response_6","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body_5","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , info : { name : tenant1 , email : email1@tenant1.com , description : a simple tenant , image : url to image , website : www.tenant1.com , created : 2015-10-20 02:08:04 , updated : 2015-10-20 02:08:04 }, status : { total_status : false, ams : { metric_data : { ingestion : false, publishing : false, status_streaming : false, messages_arrived : 0 }, sync_data : { ingestion : false, publishing : false, status_streaming : false, messages_arrived : 0 } }, hdfs : { metric_data : false }, engine_config : false, last_check : } } ] }","title":"Response body"},{"location":"tenants/#put-update-argo-engine-status-information-on-an-existing-tenant","text":"This method can be used to update status information on an existing tenant","title":"[PUT]: Update argo-engine status information on an existing tenant"},{"location":"tenants/#input_7","text":"PUT /admin/tenants/{ID}/status","title":"Input"},{"location":"tenants/#request-headers_7","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"tenants/#put-body_1","text":"{ ams : { metric_data : { ingestion : true, publishing : true, status_streaming : false, messages_arrived : 100 }, sync_data : { ingestion : true, publishing : false, status_streaming : true, messages_arrived : 200 } }, hdfs : { metric_data : true, sync_data : { Critical : { downtimes : true, group_endpoints : true, blank_recompuation : true, group_groups : true, weights : true, operations_profile : true, metric_profile : true, aggregation_profile : true } } }, engine_config : true, last_check : 2018-08-10T12:32:45Z }","title":"PUT BODY"},{"location":"tenants/#response_7","text":"Headers: Status: 200 OK","title":"Response"},{"location":"tenants/#response-body_6","text":"Json Response { status : { message : Tenant successfully updated , code : 200 } }","title":"Response body"},{"location":"threshold_profiles/","text":"Description A Threshold profile contains a list of threshold rules. Threshold rules refer to low level monitoring numeric values that accompany metric data and threshold limits on those values that can deem the status 'WARNING' or 'CRITICAL' Threshold format Each threhsold rule is expressed as string in the following format {label}={value}[uom];{warning};{critical};{min};{max} label : can contain alphanumeric characters but must always begin with a letter value : is a float or integer uom : is a string unit of measurement (accepted values: s , us , ms , B , KB , MB , TB , % , c ) warning : is a range defining the warning threshold limits critical : is a range defining the critical threshold limits min : is a float or integer defining the minimum value max : is a float or integer defining the maximum value Note: min,max can be omitted. Ranges ( {warning} or {critical} ) are defined in the following format: @{floor}:{ceiling} - @ : optional - negates the range (value should belong outside ranges limits) floor : integer/float or ~ that defines negative infinity ceiling : integer/float or empty (defining positive infinity) Thresholds rule Each thresholds rule can contain multiple threshold definitions separated by space for e.g. label01=1s;0:10;11:12 label02=1B;0:200;199:500;0;500 Thresholds profile Each threhsolds profile has a name and contains a list of thresholds rules in the following json format Each rule must always refer to a metric. It can optionally refer to a host and an endpoint group. { id : 68dbd3d8-c95d-41ea-b13e-7ea3644285e5 , name : example-threshold-profile-101 rules :[ { metric : httpd.ResponseTime thresholds : response=20ms;0:300;299:1000 }, { host : webserver01.example.foo metric : httpd.ResponseTime thresholds : response=20ms;0:200;199:300 }, { endpoint_group : TEST-SITE-51 metric : httpd.ResponseTime thresholds : response=20ms;0:500;499:1000 } ] } API Calls Name Description Shortcut GET: List Thresholds Profile Requests This method can be used to retrieve a list of current Thresholds profiles. Description GET: List a specific Threshold profile This method can be used to retrieve a specific Threshold profile based on its id. Description POST: Create a new Threshold profile This method can be used to create a new Threshold profile Description PUT: Update an Threshold profile This method can be used to update information on an existing Threshold profile Description DELETE: Delete an Threshold profile This method can be used to delete an existing Threshold profile Description [GET]: List Threshold Profiles This method can be used to retrieve a list of current Threshold profiles Input GET /thresholds_profiles Optional Query Parameters Type Description Required name thresholds profile name to be used as query NO date Date to retrieve a historic version of the thresholds profiles. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , name : thr01 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshnesss=1s;10;9:;0;25 entries=1;3;2:0;10 } ] }, { id : 6ac7d222-1f8e-4a02-a502-720e8f11e50b , name : thr02 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] }, { id : 6ac7d555-1f8e-4a02-a502-720e8f11e50b , name : thr03 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] } ] } [GET]: List A Specific Thresholds profile This method can be used to retrieve specific Thresholds profile based on its id Input GET /thresholds_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Optional Query Parameters Type Description Required date Date to retrieve a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d222-1f8e-4a02-a502-720e8f11e50b , name : thr02 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] } ] } [POST]: Create a new Thresholds Profile This method can be used to insert a new thresholds profile Input POST /thresholds_profiles Request headers x-api-key: shared_key_value Accept: application/json Type Description Required date Date to create a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO POST BODY { name : thr04 , rules : [ { metric : metricB , thresholds : time=1s;10;9:30;0;30 } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Thresholds Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/thresholds_profiles/{{ID}} } } } [PUT]: Update information on an existing operations profile This method can be used to update information on an existing operations profile Input PUT /thresholds_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Type Description Required date Date to update a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO PUT BODY { name : thr04 , rules : [ { metric : metricB , thresholds : time=1s;10;9:30;0;30 } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Thresholds Profile successfully updated , code : 200 } } [DELETE]: Delete an existing aggregation profile This method can be used to delete an existing aggregation profile Input DELETE /thresholds_profiles/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Operations Profile Successfully Deleted , code : 200 } } Validation Checks When submitting or updating a new threshold profile, validation checks are performed on json POST/PUT body for the following cases: Check if each thresholds rule is valid according to threshold specification discussed in the first paragraph When an invalid operations profile is submitted the api responds with a validation error list: Example invalid profile { name : test-invalid-01 , rules : [ { thresholds : bad01=33;33s }, { thresholds : good01=33s;33 good02=1s;~:10;9:;-20;30 }, { thresholds : bad02=33sbad03=1s;~~:10;9:;-20;30 }, { thresholds : 33;33 bad04=33s;33 -20;30 }, { thresholds : good01=2KB;0:3;2:10;0;20 good02=1c;~:10;9:30;-30;30 } ] } Api response is the following: Response Headers: Status: 422 Unprocessable Entity Response body { status : { message : Validation Error , code : 422 }, errors : [ { message : Validation Failed , code : 422 , details : Invalid threshold: bad01=33;33s }, { message : Validation Failed , code : 422 , details : Invalid threshold: bad02=33sbad03=1s;~~:10;9:;-20;30 }, { message : Validation Failed , code : 422 , details : Invalid threshold: 33;33 bad04=33s;33 -20;30 } ] }","title":"API documentation | ARGO"},{"location":"threshold_profiles/#description","text":"A Threshold profile contains a list of threshold rules. Threshold rules refer to low level monitoring numeric values that accompany metric data and threshold limits on those values that can deem the status 'WARNING' or 'CRITICAL'","title":"Description"},{"location":"threshold_profiles/#threshold-format","text":"Each threhsold rule is expressed as string in the following format {label}={value}[uom];{warning};{critical};{min};{max} label : can contain alphanumeric characters but must always begin with a letter value : is a float or integer uom : is a string unit of measurement (accepted values: s , us , ms , B , KB , MB , TB , % , c ) warning : is a range defining the warning threshold limits critical : is a range defining the critical threshold limits min : is a float or integer defining the minimum value max : is a float or integer defining the maximum value Note: min,max can be omitted. Ranges ( {warning} or {critical} ) are defined in the following format: @{floor}:{ceiling} - @ : optional - negates the range (value should belong outside ranges limits) floor : integer/float or ~ that defines negative infinity ceiling : integer/float or empty (defining positive infinity)","title":"Threshold format"},{"location":"threshold_profiles/#thresholds-rule","text":"Each thresholds rule can contain multiple threshold definitions separated by space for e.g. label01=1s;0:10;11:12 label02=1B;0:200;199:500;0;500","title":"Thresholds rule"},{"location":"threshold_profiles/#thresholds-profile","text":"Each threhsolds profile has a name and contains a list of thresholds rules in the following json format Each rule must always refer to a metric. It can optionally refer to a host and an endpoint group. { id : 68dbd3d8-c95d-41ea-b13e-7ea3644285e5 , name : example-threshold-profile-101 rules :[ { metric : httpd.ResponseTime thresholds : response=20ms;0:300;299:1000 }, { host : webserver01.example.foo metric : httpd.ResponseTime thresholds : response=20ms;0:200;199:300 }, { endpoint_group : TEST-SITE-51 metric : httpd.ResponseTime thresholds : response=20ms;0:500;499:1000 } ] }","title":"Thresholds profile"},{"location":"threshold_profiles/#api-calls","text":"Name Description Shortcut GET: List Thresholds Profile Requests This method can be used to retrieve a list of current Thresholds profiles. Description GET: List a specific Threshold profile This method can be used to retrieve a specific Threshold profile based on its id. Description POST: Create a new Threshold profile This method can be used to create a new Threshold profile Description PUT: Update an Threshold profile This method can be used to update information on an existing Threshold profile Description DELETE: Delete an Threshold profile This method can be used to delete an existing Threshold profile Description","title":"API Calls"},{"location":"threshold_profiles/#get-list-threshold-profiles","text":"This method can be used to retrieve a list of current Threshold profiles","title":"[GET]: List Threshold Profiles"},{"location":"threshold_profiles/#input","text":"GET /thresholds_profiles","title":"Input"},{"location":"threshold_profiles/#optional-query-parameters","text":"Type Description Required name thresholds profile name to be used as query NO date Date to retrieve a historic version of the thresholds profiles. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"threshold_profiles/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"threshold_profiles/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"threshold_profiles/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , name : thr01 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshnesss=1s;10;9:;0;25 entries=1;3;2:0;10 } ] }, { id : 6ac7d222-1f8e-4a02-a502-720e8f11e50b , name : thr02 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] }, { id : 6ac7d555-1f8e-4a02-a502-720e8f11e50b , name : thr03 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] } ] }","title":"Response body"},{"location":"threshold_profiles/#get-list-a-specific-thresholds-profile","text":"This method can be used to retrieve specific Thresholds profile based on its id","title":"[GET]: List A Specific Thresholds profile"},{"location":"threshold_profiles/#input_1","text":"GET /thresholds_profiles/{ID}","title":"Input"},{"location":"threshold_profiles/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"threshold_profiles/#optional-query-parameters_1","text":"Type Description Required date Date to retrieve a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"threshold_profiles/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"threshold_profiles/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d222-1f8e-4a02-a502-720e8f11e50b , name : thr02 , rules : [ { host : hostFoo , metric : metricA , thresholds : freshness=1s;10;9:;0;25 entries=1;3;2:0;10 } ] } ] }","title":"Response body"},{"location":"threshold_profiles/#post-create-a-new-thresholds-profile","text":"This method can be used to insert a new thresholds profile","title":"[POST]: Create a new Thresholds Profile"},{"location":"threshold_profiles/#input_2","text":"POST /thresholds_profiles","title":"Input"},{"location":"threshold_profiles/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json Type Description Required date Date to create a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO","title":"Request headers"},{"location":"threshold_profiles/#post-body","text":"{ name : thr04 , rules : [ { metric : metricB , thresholds : time=1s;10;9:30;0;30 } ] }","title":"POST BODY"},{"location":"threshold_profiles/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"threshold_profiles/#response-body_2","text":"Json Response { status : { message : Thresholds Profile successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/thresholds_profiles/{{ID}} } } }","title":"Response body"},{"location":"threshold_profiles/#put-update-information-on-an-existing-operations-profile","text":"This method can be used to update information on an existing operations profile","title":"[PUT]: Update information on an existing operations profile"},{"location":"threshold_profiles/#input_3","text":"PUT /thresholds_profiles/{ID}","title":"Input"},{"location":"threshold_profiles/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json Type Description Required date Date to update a historic version of the thresholds profile. If no date parameter is provided the most current profile will be returned NO","title":"Request headers"},{"location":"threshold_profiles/#put-body","text":"{ name : thr04 , rules : [ { metric : metricB , thresholds : time=1s;10;9:30;0;30 } ] }","title":"PUT BODY"},{"location":"threshold_profiles/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"threshold_profiles/#response-body_3","text":"Json Response { status : { message : Thresholds Profile successfully updated , code : 200 } }","title":"Response body"},{"location":"threshold_profiles/#delete-delete-an-existing-aggregation-profile","text":"This method can be used to delete an existing aggregation profile","title":"[DELETE]: Delete an existing aggregation profile"},{"location":"threshold_profiles/#input_4","text":"DELETE /thresholds_profiles/{ID}","title":"Input"},{"location":"threshold_profiles/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"threshold_profiles/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"threshold_profiles/#response-body_4","text":"Json Response { status : { message : Operations Profile Successfully Deleted , code : 200 } }","title":"Response body"},{"location":"threshold_profiles/#validation-checks","text":"When submitting or updating a new threshold profile, validation checks are performed on json POST/PUT body for the following cases: Check if each thresholds rule is valid according to threshold specification discussed in the first paragraph When an invalid operations profile is submitted the api responds with a validation error list:","title":"Validation Checks"},{"location":"threshold_profiles/#example-invalid-profile","text":"{ name : test-invalid-01 , rules : [ { thresholds : bad01=33;33s }, { thresholds : good01=33s;33 good02=1s;~:10;9:;-20;30 }, { thresholds : bad02=33sbad03=1s;~~:10;9:;-20;30 }, { thresholds : 33;33 bad04=33s;33 -20;30 }, { thresholds : good01=2KB;0:3;2:10;0;20 good02=1c;~:10;9:30;-30;30 } ] } Api response is the following:","title":"Example invalid profile"},{"location":"threshold_profiles/#response_5","text":"Headers: Status: 422 Unprocessable Entity","title":"Response"},{"location":"threshold_profiles/#response-body_5","text":"{ status : { message : Validation Error , code : 422 }, errors : [ { message : Validation Failed , code : 422 , details : Invalid threshold: bad01=33;33s }, { message : Validation Failed , code : 422 , details : Invalid threshold: bad02=33sbad03=1s;~~:10;9:;-20;30 }, { message : Validation Failed , code : 422 , details : Invalid threshold: 33;33 bad04=33s;33 -20;30 } ] }","title":"Response body"},{"location":"topology/","text":"Topology Statistics API calls for retrieving topology statistics per report Name Description Shortcut GET: List topology statistics List number of groups, endpoint groups and services . Description [GET]: List topology statistics This method may be used to retrieve topology statistics for a specific report. Topology statistics include number of groups, endpoint groups and services included in the report Input List All latest metric data /topology/stats/{report}/?[date] Path Parameters Type Description Required Default value report name of the report used YES Url Parameters Type Description Required Default value date target a specific data NO today's date Headers x-api-key: secret_key_value Accept: application/json Response Code Status: 200 OK Response body { status : { message : application/json , code : 200 }, data : { group_count : 1, group_type : type of top-level groups in report , group_list : [ list of top level groups ], endpoint_group_count : 1, endpoint_group_type : type of endpoint groups in report , endpoint_group_list : [ list of endpoint groups ], service_count : 1, service_list : [ list of available services ] } } Example Request: URL: latest/Report_B/?date=2015-05-01 Headers: x-api-key: secret_key_value Accept: application/json Example Response: Code: Status: 200 OK Response body: { status : { message : application/json , code : 200 }, data : { group_count : 2, group_type : PROJECTS , group_list : [ PROJECT_A , PROJECT_B ], endpoint_group_count : 3, endpoint_group_type : SERVICEGROUPS , endpoint_group_list : [ SGROUP_A , SGROUP_B , SGROUP_C ], service_count : 8, service_list : [ service_type_1 , service_type_2 , service_type_3 , service_type_4 , service_type_5 , service_type_6 , service_type_7 , service_type_8 ] } }","title":"Topology statistics"},{"location":"topology/#topology-statistics","text":"API calls for retrieving topology statistics per report Name Description Shortcut GET: List topology statistics List number of groups, endpoint groups and services . Description","title":"Topology Statistics"},{"location":"topology/#get-list-topology-statistics","text":"This method may be used to retrieve topology statistics for a specific report. Topology statistics include number of groups, endpoint groups and services included in the report","title":"[GET]: List topology statistics"},{"location":"topology/#input","text":"","title":"Input"},{"location":"topology/#list-all-latest-metric-data","text":"/topology/stats/{report}/?[date]","title":"List All latest metric data"},{"location":"topology/#path-parameters","text":"Type Description Required Default value report name of the report used YES","title":"Path Parameters"},{"location":"topology/#url-parameters","text":"Type Description Required Default value date target a specific data NO today's date","title":"Url Parameters"},{"location":"topology/#headers","text":"x-api-key: secret_key_value Accept: application/json","title":"Headers"},{"location":"topology/#response-code","text":"Status: 200 OK","title":"Response Code"},{"location":"topology/#response-body","text":"{ status : { message : application/json , code : 200 }, data : { group_count : 1, group_type : type of top-level groups in report , group_list : [ list of top level groups ], endpoint_group_count : 1, endpoint_group_type : type of endpoint groups in report , endpoint_group_list : [ list of endpoint groups ], service_count : 1, service_list : [ list of available services ] } }","title":"Response body"},{"location":"topology/#example-request","text":"URL: latest/Report_B/?date=2015-05-01 Headers: x-api-key: secret_key_value Accept: application/json","title":"Example Request:"},{"location":"topology/#example-response","text":"Code: Status: 200 OK Response body: { status : { message : application/json , code : 200 }, data : { group_count : 2, group_type : PROJECTS , group_list : [ PROJECT_A , PROJECT_B ], endpoint_group_count : 3, endpoint_group_type : SERVICEGROUPS , endpoint_group_list : [ SGROUP_A , SGROUP_B , SGROUP_C ], service_count : 8, service_list : [ service_type_1 , service_type_2 , service_type_3 , service_type_4 , service_type_5 , service_type_6 , service_type_7 , service_type_8 ] } }","title":"Example Response:"},{"location":"validations/","text":"API Validations Parameters validations Name Affected Resources Verb Shortcut start_time /results , /status GET Description end_time /results , /status GET Description exec_time /metric_result GET Description granularity /results GET Description start_time The start_time query parameter is used under the /results and /status resources to define the starting time of the query used to match A/R or status results respectively. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : start_time not set , code : 400 , details : Please use start_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the query start time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : start_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] } end_time The end_time query parameter is used under the /results and /status resources to define the ending time of the query used to match A/R or status results respectively. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : end_time not set , code : 400 , details : Please use end_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the query end time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : end_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] } No time span set In case neither the start_time nor the end_time parameters are defined the following response is returned by the api: { status : { message : Bad Request , code : 400 }, errors : [ { message : No time span set , code : 400 , details : Please use start_time and end_time url parameters to set the prefered time span } ] } exec_time The exec_time query parameter is used under the /metric_result resource to define the execution time of the metric result to fetch from the datastore. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : exec_time not set , code : 400 , details : Please use exec_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the exact probe execution time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : exec_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] } granularity The granularity query parameter is used optionally under the /results resource to indicate the granularity level. It's value may be either monthly or daily. If not set by the user monthly is used. In case the parameter value is malformed (neither daily nor monthly ) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : Wrong Granularity , code : 400 , details : %s is not accepted as granularity parameter, please provide either daily or monthly } ] } The Granularity parameter is only relevant for a/r result requests. For status requests granularity is not supported. In order to avoid confusion, if a user provides granularity parameter during status requests the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : Granularity parameter should not be used in status results , code : 400 , details : Granularity parameter is valid only for a/r result requests, not for status results } ] } Headers validations Name Affected Resources Shortcut Accept All Description Accept The Accept header is compulsory to use under all api resources. Its value may be either application/json or application/xml . In case the Accept header is not provided or is provided but is malformed the following error response is returned by the api: { status : { message : Not Acceptable Content Type , code : 406 , details : Accept header provided did not contain any valid content types. Acceptable content types are 'application/xml' and 'application/json' } }","title":"Validation Checks"},{"location":"validations/#api-validations","text":"","title":"API Validations"},{"location":"validations/#parameters-validations","text":"Name Affected Resources Verb Shortcut start_time /results , /status GET Description end_time /results , /status GET Description exec_time /metric_result GET Description granularity /results GET Description","title":"Parameters validations"},{"location":"validations/#start_time","text":"The start_time query parameter is used under the /results and /status resources to define the starting time of the query used to match A/R or status results respectively. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : start_time not set , code : 400 , details : Please use start_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the query start time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : start_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] }","title":"start_time"},{"location":"validations/#end_time","text":"The end_time query parameter is used under the /results and /status resources to define the ending time of the query used to match A/R or status results respectively. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : end_time not set , code : 400 , details : Please use end_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the query end time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : end_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] }","title":"end_time"},{"location":"validations/#no-time-span-set","text":"In case neither the start_time nor the end_time parameters are defined the following response is returned by the api: { status : { message : Bad Request , code : 400 }, errors : [ { message : No time span set , code : 400 , details : Please use start_time and end_time url parameters to set the prefered time span } ] }","title":"No time span set"},{"location":"validations/#exec_time","text":"The exec_time query parameter is used under the /metric_result resource to define the execution time of the metric result to fetch from the datastore. The value should be given in zulu format like so: 2006-01-02T15:04:05Z . In case the parameter is not provided the following response is returned { status : { message : Bad Request , code : 400 }, errors : [ { message : exec_time not set , code : 400 , details : Please use exec_time url parameter in zulu format (like 2006-01-02T15:04:05Z) to indicate the exact probe execution time } ] } In case the parameter value is malformed (not in zulu expected format) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : exec_time parsing error , code : 400 , details : Error parsing date string %s please use zulu format like 2006-01-02T15:04:05Z } ] }","title":"exec_time"},{"location":"validations/#granularity","text":"The granularity query parameter is used optionally under the /results resource to indicate the granularity level. It's value may be either monthly or daily. If not set by the user monthly is used. In case the parameter value is malformed (neither daily nor monthly ) the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : Wrong Granularity , code : 400 , details : %s is not accepted as granularity parameter, please provide either daily or monthly } ] } The Granularity parameter is only relevant for a/r result requests. For status requests granularity is not supported. In order to avoid confusion, if a user provides granularity parameter during status requests the following response is returned: { status : { message : Bad Request , code : 400 }, errors : [ { message : Granularity parameter should not be used in status results , code : 400 , details : Granularity parameter is valid only for a/r result requests, not for status results } ] }","title":"granularity"},{"location":"validations/#headers-validations","text":"Name Affected Resources Shortcut Accept All Description","title":"Headers validations"},{"location":"validations/#accept","text":"The Accept header is compulsory to use under all api resources. Its value may be either application/json or application/xml . In case the Accept header is not provided or is provided but is malformed the following error response is returned by the api: { status : { message : Not Acceptable Content Type , code : 406 , details : Accept header provided did not contain any valid content types. Acceptable content types are 'application/xml' and 'application/json' } }","title":"Accept"},{"location":"version/","text":"List API Version Information This method can be used to retrieve api version information Input GET /version Request headers Accept: application/json or application/xml Response Headers: Status: 200 OK Response Body Json Response { release : 1.7.9 , commit : f9f2e8c5f02fbcc93fe76b0d3cfa5d2089336849 , build_time : 2019-11-01T12:51:04Z , golang : go1.11.5 , compiler : gc , os : linux , architecture : amd64 } XML Response Version release 1.7.9 /release commit f9f2e8c5f02fbcc93fe76b0d3cfa5d2089336849 /commit build_time 2019-11-01T12:51:04Z /build_time golang go1.11.5 /golang compiler gc /compiler os linux /os architecture amd64 /architecture /Version","title":"List API Version Information"},{"location":"version/#list-api-version-information","text":"This method can be used to retrieve api version information","title":"List API Version Information"},{"location":"version/#input","text":"GET /version","title":"Input"},{"location":"version/#request-headers","text":"Accept: application/json or application/xml","title":"Request headers"},{"location":"version/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"version/#response-body","text":"Json Response { release : 1.7.9 , commit : f9f2e8c5f02fbcc93fe76b0d3cfa5d2089336849 , build_time : 2019-11-01T12:51:04Z , golang : go1.11.5 , compiler : gc , os : linux , architecture : amd64 } XML Response Version release 1.7.9 /release commit f9f2e8c5f02fbcc93fe76b0d3cfa5d2089336849 /commit build_time 2019-11-01T12:51:04Z /build_time golang go1.11.5 /golang compiler gc /compiler os linux /os architecture amd64 /architecture /Version","title":"Response Body"},{"location":"weights/","text":"API Calls Name Description Shortcut GET: List Weights resources Request This method can be used to retrieve a list of current weight resources. Description GET: List a specific Weights resource This method can be used to retrieve a specific weight resource based on its id. Description POST: Create a new weight resource This method can be used to create a new weight resource Description PUT: Update a weight resource This method can be used to update information on an existing weight resource Description DELETE: Delete a weight resource This method can be used to delete an existing weight resource Description [GET]: List weight resources This method can be used to retrieve a list of current weight resources Input GET /weights Optional Query Parameters Type Description Required name weight resource name to be used as query NO date Date to retrieve a historic version of the weights resource. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , weight_type : hepsepc , group_type : SITES , groups : [ { name : SITE-A , value : 1673 }, { name : SITE-B , value : 1234 }, { name : SITE-C , value : 523 }, { name : SITE-D , value : 2 } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , weight_type : hepsepc , group_type : SERVICEGROUPS , groups : [ { name : SVGROUP-A , value : 334 }, { name : SVGROUP-B , value : 588 } ] } ] } [GET]: List A Specific weight resource This method can be used to retrieve specific weight resource based on its id Input GET /weights/{ID} Optional Query Parameters Type Description Required date Date to retrieve a historic version of the weights resource. If no date parameter is provided the most current profile will be returned NO Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , weight_type : hepsepc , group_type : SERVICEGROUPS , groups : [ { name : SVGROUP-A , value : 334 }, { name : SVGROUP-B , value : 588 } ] } ] } [POST]: Create a new weight resource This method can be used to insert a new weight resource Input POST /weights Optional Query Parameters Type Description Required date Date to create a historic version of the weights resource. If no date parameter is provided the current date will be supplied automatically NO Request headers x-api-key: shared_key_value Accept: application/json POST BODY { name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 336 }, { name : site-b , value : 343 }, { name : site-c , value : 553 }, { name : site-d , value : 435 }, { name : site-e , value : 3.33 }, { name : site-f , value : 323.3 } ] } Response Headers: Status: 201 Created Response body Json Response { status : { message : Weight resource successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/weights/{{ID}} } } } [PUT]: Update information on an existing weight resource This method can be used to update information on an existing weight resource Input PUT /weights/{ID} Optional Query Parameters Type Description Required date Date to update a historic version of the weights resource. If no date parameter is provided If no date parameter is provided the current date will be supplied automatically NO Request headers x-api-key: shared_key_value Accept: application/json PUT BODY { name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 1336 }, { name : site-b , value : 1343 } ] } Response Headers: Status: 200 OK Response body Json Response { status : { message : Weight resource successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/weights/{{ID}} } } } [DELETE]: Delete an existing weight resource This method can be used to delete an existing weight resource Input DELETE /weights/{ID} Request headers x-api-key: shared_key_value Accept: application/json Response Headers: Status: 200 OK Response body Json Response { status : { message : Weight resource Successfully Deleted , code : 200 } }","title":"Weights resource"},{"location":"weights/#api-calls","text":"Name Description Shortcut GET: List Weights resources Request This method can be used to retrieve a list of current weight resources. Description GET: List a specific Weights resource This method can be used to retrieve a specific weight resource based on its id. Description POST: Create a new weight resource This method can be used to create a new weight resource Description PUT: Update a weight resource This method can be used to update information on an existing weight resource Description DELETE: Delete a weight resource This method can be used to delete an existing weight resource Description","title":"API Calls"},{"location":"weights/#get-list-weight-resources","text":"This method can be used to retrieve a list of current weight resources","title":"[GET]: List weight resources"},{"location":"weights/#input","text":"GET /weights","title":"Input"},{"location":"weights/#optional-query-parameters","text":"Type Description Required name weight resource name to be used as query NO date Date to retrieve a historic version of the weights resource. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"weights/#request-headers","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"weights/#response","text":"Headers: Status: 200 OK","title":"Response"},{"location":"weights/#response-body","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50b , date : 2019-11-04 , name : Critical , weight_type : hepsepc , group_type : SITES , groups : [ { name : SITE-A , value : 1673 }, { name : SITE-B , value : 1234 }, { name : SITE-C , value : 523 }, { name : SITE-D , value : 2 } ] }, { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , weight_type : hepsepc , group_type : SERVICEGROUPS , groups : [ { name : SVGROUP-A , value : 334 }, { name : SVGROUP-B , value : 588 } ] } ] }","title":"Response body"},{"location":"weights/#get-list-a-specific-weight-resource","text":"This method can be used to retrieve specific weight resource based on its id","title":"[GET]: List A Specific weight resource"},{"location":"weights/#input_1","text":"GET /weights/{ID}","title":"Input"},{"location":"weights/#optional-query-parameters_1","text":"Type Description Required date Date to retrieve a historic version of the weights resource. If no date parameter is provided the most current profile will be returned NO","title":"Optional Query Parameters"},{"location":"weights/#request-headers_1","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"weights/#response_1","text":"Headers: Status: 200 OK","title":"Response"},{"location":"weights/#response-body_1","text":"Json Response { status : { message : Success , code : 200 }, data : [ { id : 6ac7d684-1f8e-4a02-a502-720e8f11e50c , date : 2019-11-02 , name : NonCritical , weight_type : hepsepc , group_type : SERVICEGROUPS , groups : [ { name : SVGROUP-A , value : 334 }, { name : SVGROUP-B , value : 588 } ] } ] }","title":"Response body"},{"location":"weights/#post-create-a-new-weight-resource","text":"This method can be used to insert a new weight resource","title":"[POST]: Create a new weight resource"},{"location":"weights/#input_2","text":"POST /weights","title":"Input"},{"location":"weights/#optional-query-parameters_2","text":"Type Description Required date Date to create a historic version of the weights resource. If no date parameter is provided the current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"weights/#request-headers_2","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"weights/#post-body","text":"{ name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 336 }, { name : site-b , value : 343 }, { name : site-c , value : 553 }, { name : site-d , value : 435 }, { name : site-e , value : 3.33 }, { name : site-f , value : 323.3 } ] }","title":"POST BODY"},{"location":"weights/#response_2","text":"Headers: Status: 201 Created","title":"Response"},{"location":"weights/#response-body_2","text":"Json Response { status : { message : Weight resource successfully created , code : 201 }, data : { id : {{ID}} , links : { self : https:///api/v2/weights/{{ID}} } } }","title":"Response body"},{"location":"weights/#put-update-information-on-an-existing-weight-resource","text":"This method can be used to update information on an existing weight resource","title":"[PUT]: Update information on an existing weight resource"},{"location":"weights/#input_3","text":"PUT /weights/{ID}","title":"Input"},{"location":"weights/#optional-query-parameters_3","text":"Type Description Required date Date to update a historic version of the weights resource. If no date parameter is provided If no date parameter is provided the current date will be supplied automatically NO","title":"Optional Query Parameters"},{"location":"weights/#request-headers_3","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"weights/#put-body","text":"{ name : weight_set3 , weight_type : hepspec2 , group_type : SITES , groups : [ { name : site-a , value : 1336 }, { name : site-b , value : 1343 } ] }","title":"PUT BODY"},{"location":"weights/#response_3","text":"Headers: Status: 200 OK","title":"Response"},{"location":"weights/#response-body_3","text":"Json Response { status : { message : Weight resource successfully updated , code : 200 }, data : { id : {{ID}} , links : { self : https:///api/v2/weights/{{ID}} } } }","title":"Response body"},{"location":"weights/#delete-delete-an-existing-weight-resource","text":"This method can be used to delete an existing weight resource","title":"[DELETE]: Delete an existing weight resource"},{"location":"weights/#input_4","text":"DELETE /weights/{ID}","title":"Input"},{"location":"weights/#request-headers_4","text":"x-api-key: shared_key_value Accept: application/json","title":"Request headers"},{"location":"weights/#response_4","text":"Headers: Status: 200 OK","title":"Response"},{"location":"weights/#response-body_4","text":"Json Response { status : { message : Weight resource Successfully Deleted , code : 200 } }","title":"Response body"}]}